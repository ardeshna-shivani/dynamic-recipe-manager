{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\react recipe-project\\\\recipe-manager\\\\src\\\\Pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RecipeCard from '../Components/RecipeCard';\nimport { AuthContext } from '../utils/Auth';\nimport RecipeDetailsModal from '../Components/RecipeDetailsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = props => {\n  _s();\n  // { searchTerm, cuisineFilter, difficultyFilter, sortOption }\n  const navigate = useNavigate();\n  const {\n    user\n  } = React.useContext(AuthContext);\n  const [recipes, setRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [showOnlyMyRecipe, setShowOnlyMyRecipe] = useState(false);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  useEffect(() => {\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\n    setRecipes(savedRecipes);\n  }, []);\n  let visibleRecipes = recipes;\n  console.log(\"visible recipe: \", visibleRecipes);\n  console.log(\"recipe : \", recipes);\n\n  // Filter based on the \"Show My Recipes\" toggle\n  if (showOnlyMyRecipe && user) {\n    visibleRecipes = visibleRecipes.filter(recipe => recipe.userEmail === user.email);\n  }\n\n  // Filter by search term\n  if (props !== null && props !== void 0 && props.searchTerm) {\n    visibleRecipes = visibleRecipes.filter(recipe => recipe.name.toLowerCase().includes(props === null || props === void 0 ? void 0 : props.searchTerm.toLowerCase()));\n  }\n\n  // Filter by cuisine\n  if (props !== null && props !== void 0 && props.cuisineFilter) {\n    visibleRecipes = visibleRecipes.filter(recipe => recipe.cuisine === (props === null || props === void 0 ? void 0 : props.cuisineFilter));\n  }\n\n  // Filter by difficulty\n  if (props !== null && props !== void 0 && props.difficultyFilter) {\n    visibleRecipes = visibleRecipes.filter(recipe => recipe.difficulty === (props === null || props === void 0 ? void 0 : props.difficultyFilter));\n  }\n\n  // Sorting logic for time\n  if ((props === null || props === void 0 ? void 0 : props.sortOption) === 'time') {\n    visibleRecipes = visibleRecipes.sort((a, b) => {\n      const timeToMinutes = time => {\n        const [hours, minutes] = time.split(':').map(Number);\n        return hours * 60 + minutes;\n      };\n      const timeA = timeToMinutes(a.time);\n      const timeB = timeToMinutes(b.time);\n      return timeA - timeB; // Sort in ascending order\n    });\n  }\n  // Sorting logic for alphabetical order\n  else if ((props === null || props === void 0 ? void 0 : props.sortOption) === 'alpha') {\n    visibleRecipes = visibleRecipes.sort((a, b) => {\n      const nameA = String(a.name).toLowerCase();\n      const nameB = String(b.name).toLowerCase();\n      return nameB.localeCompare(nameA);\n    });\n  }\n\n  // Log visible recipes for debugging\n  console.log(\"Filtered Recipes:\", visibleRecipes);\n  setFilteredRecipes(visibleRecipes); // Update the filteredRecipes state\n  // Dependencies include sortOption and other filters\n\n  const handleDelete = recipeId => {\n    const updatedRecipes = recipes.filter(recipe => recipe.id !== recipeId);\n    setRecipes(updatedRecipes); // Update the recipes state\n    setFilteredRecipes(updatedRecipes); // Update the filteredRecipes state with the new list\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes)); // Store the updated list in localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOnlyMyRecipe(prev => !prev),\n        children: showOnlyMyRecipe ? 'Show All Recipes' : 'Show My Recipes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/addRecipe'),\n        children: \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), filteredRecipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recipes found. Try adjusting your filters or add one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: filteredRecipes.map((r, index) => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        // Use `r.id` if available, otherwise fallback to `index`\n        recipe: r,\n        onDelete: handleDelete // Pass handleDelete to RecipeCard\n      }, r.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeDetailsModal, {\n      recipe: selectedRecipe,\n      onClose: () => setSelectedRecipe(null) // Close the modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"JxCJlU9XJJluxOsuF9mHf8SWNOk=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nconst gridStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n  gap: '20px'\n};\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RecipeCard","AuthContext","RecipeDetailsModal","jsxDEV","_jsxDEV","HomePage","props","_s","navigate","user","useContext","recipes","setRecipes","filteredRecipes","setFilteredRecipes","showOnlyMyRecipe","setShowOnlyMyRecipe","selectedRecipe","setSelectedRecipe","savedRecipes","JSON","parse","localStorage","getItem","visibleRecipes","console","log","filter","recipe","userEmail","email","searchTerm","name","toLowerCase","includes","cuisineFilter","cuisine","difficultyFilter","difficulty","sortOption","sort","a","b","timeToMinutes","time","hours","minutes","split","map","Number","timeA","timeB","nameA","String","nameB","localeCompare","handleDelete","recipeId","updatedRecipes","id","setItem","stringify","children","style","display","gap","marginBottom","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","length","gridStyle","r","index","onDelete","onClose","_c","gridTemplateColumns","$RefreshReg$"],"sources":["C:/Users/Shivani/react recipe-project/recipe-manager/src/Pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RecipeCard from '../Components/RecipeCard';\r\nimport { AuthContext } from '../utils/Auth';\r\nimport RecipeDetailsModal from '../Components/RecipeDetailsModal';\r\n\r\nconst HomePage = (props) => {\r\n  // { searchTerm, cuisineFilter, difficultyFilter, sortOption }\r\n  const navigate = useNavigate();\r\n  const { user } = React.useContext(AuthContext);\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\r\n  const [showOnlyMyRecipe, setShowOnlyMyRecipe] = useState(false);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\r\n    setRecipes(savedRecipes);\r\n  }, []);\r\n\r\n    let visibleRecipes = recipes;\r\n    console.log(\"visible recipe: \",visibleRecipes);\r\n    console.log(\"recipe : \",recipes);\r\n    \r\n    \r\n\r\n    // Filter based on the \"Show My Recipes\" toggle\r\n    if (showOnlyMyRecipe && user) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) => recipe.userEmail === user.email);\r\n    }\r\n\r\n    // Filter by search term\r\n    if (props?.searchTerm) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) =>\r\n        recipe.name.toLowerCase().includes(props?.searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Filter by cuisine\r\n    if (props?.cuisineFilter) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) => recipe.cuisine === props?.cuisineFilter);\r\n    }\r\n\r\n    // Filter by difficulty\r\n    if (props?.difficultyFilter) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) => recipe.difficulty === props?.difficultyFilter);\r\n    }\r\n\r\n    // Sorting logic for time\r\n    if (props?.sortOption === 'time') {\r\n      visibleRecipes = visibleRecipes.sort((a, b) => {\r\n        const timeToMinutes = (time) => {\r\n          const [hours, minutes] = time.split(':').map(Number);\r\n          return hours * 60 + minutes;\r\n        };\r\n\r\n        const timeA = timeToMinutes(a.time);\r\n        const timeB = timeToMinutes(b.time);\r\n        return timeA - timeB; // Sort in ascending order\r\n      });\r\n    } \r\n    // Sorting logic for alphabetical order\r\n    else if (props?.sortOption === 'alpha') {\r\n      visibleRecipes = visibleRecipes.sort((a, b) => {\r\n        const nameA = String(a.name).toLowerCase();\r\n        const nameB = String(b.name).toLowerCase();\r\n        return nameB.localeCompare(nameA);\r\n      });\r\n    }\r\n\r\n    // Log visible recipes for debugging\r\n    console.log(\"Filtered Recipes:\", visibleRecipes);\r\n\r\n    setFilteredRecipes(visibleRecipes); // Update the filteredRecipes state\r\n   // Dependencies include sortOption and other filters\r\n\r\n  const handleDelete = (recipeId) => {\r\n    const updatedRecipes = recipes.filter((recipe) => recipe.id !== recipeId);\r\n    setRecipes(updatedRecipes); // Update the recipes state\r\n    setFilteredRecipes(updatedRecipes); // Update the filteredRecipes state with the new list\r\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes)); // Store the updated list in localStorage\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* User logged in, show the buttons for adding and filtering recipes */}\r\n      {user && (\r\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\r\n          <button onClick={() => setShowOnlyMyRecipe((prev) => !prev)}>\r\n            {showOnlyMyRecipe ? 'Show All Recipes' : 'Show My Recipes'}\r\n          </button>\r\n          <button onClick={() => navigate('/addRecipe')}>Add Recipe</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* No recipes found message */}\r\n      {filteredRecipes.length === 0 ? (\r\n        <p>No recipes found. Try adjusting your filters or add one!</p>\r\n      ) : (\r\n        <div style={gridStyle}>\r\n          {/* Render recipe cards */}\r\n          {filteredRecipes.map((r, index) => (\r\n            <RecipeCard\r\n              key={r.id || index} // Use `r.id` if available, otherwise fallback to `index`\r\n              recipe={r}\r\n              onDelete={handleDelete} // Pass handleDelete to RecipeCard\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show Recipe Details Modal */}\r\n      {selectedRecipe && (\r\n        <RecipeDetailsModal\r\n          recipe={selectedRecipe}\r\n          onClose={() => setSelectedRecipe(null)} // Close the modal\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst gridStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\r\n  gap: '20px',\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}