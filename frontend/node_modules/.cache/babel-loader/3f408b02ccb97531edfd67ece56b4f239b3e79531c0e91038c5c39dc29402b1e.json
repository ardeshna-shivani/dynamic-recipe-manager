{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\react recipe-project\\\\recipe-manager\\\\src\\\\Components\\\\RecipeDetailsModal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { Rating } from 'react-simple-star-rating';\n\n// const RecipeDetailsModal = (props) => {\n//   const [showRating,setShowRating] = useState(false);//star batave\n//   // console.log(\"setShowRating\",showRating);\n\n//   const [tempRating, setTempRating] = useState(0);\n//   // console.log(\"setTempRating\",tempRating);\n//   useEffect(() => {\n//     // const initialRating = props?.recipe?.rating || 0;\n//     // setFinalRating(props?.recipe?.rating || 0);\n//     setTempRating(props?.recipe?.rating || 0);\n//     setShowRating(false);//star mode close\n//   }, [props?.recipe]);//recipe change thay tyare chale\n\n//   if (!props?.recipe) return null;\n\n//   const rateButtonLabel = tempRating > 0 ? \"Edit recipe Rate\" : \"Add recipe Rate\";\n//   //rating hoi to label edit show thase baki add show\n\n//   const modalOverlayStyle = {\n//     position: \"fixed\",\n//     top: 0,\n//     left: 0,\n//     width: \"100vw\",\n//     height: \"100vh\",\n//     backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     zIndex: 1000,\n//   };\n\n//   const modalContentStyle = {\n//     backgroundColor: \"#fff\",\n//     padding: \"20px\",\n//     borderRadius: \"8px\",\n//     width: \"90%\",\n//     maxWidth: \"500px\",\n//     maxHeight: \"80vh\",\n//     overflowY: \"auto\",\n//     position: \"relative\",\n//   };\n\n//   const closeButtonStyle = {\n//     position: \"absolute\",\n//     top: \"10px\",\n//     right: \"10px\",\n//     background: \"red\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: \"4px\",\n//     padding: \"5px 10px\",\n//     cursor: \"pointer\",\n//   };\n\n//   // const handleClose = () => {\n//   //   setIsOpen(false);\n//   // };\n\n//   const handleRateButtonClick = () => {\n//       setShowRating(true);\n//       //user add/edit btn click kare tyare rating edit ui mate true\n//   }\n\n//   const handleRatingChange = (rate) => {\n//     setTempRating(rate);\n//     //user rating star click tyare te rating tempRating ma set\n//   };\n\n//   const handleSave = () => {\n//     const recipes = JSON.parse(localStorage.getItem('recipes')) || [];//recipe get [{}]\n//     const updatedRecipes = recipes.map((r) =>\n//       r.id === props?.recipe.id ? { ...r, rating: tempRating } : r\n//     );//r.id === props?.recipe.id - true (recipe obj(...r- r obj ne badhi property copy kare na)\n//     //rating property na nava temp rating value thi update karvi.) \n//     //false to r array ma j hase.\n//     localStorage.setItem('recipes', JSON.stringify(updatedRecipes));//store recipe\n//     // console.log(\"updatedRecipes\",updatedRecipes);[{}]\n//     setTempRating(tempRating);//rating 5,4\n//     //console.log(\"setTempRating\",tempRating);\n//     setShowRating(false);\n//     if (props?.onRatingUpdate) props?.onRatingUpdate();\n//   };\n\n//   return (\n//     <div style={modalOverlayStyle}>\n//       <div style={modalContentStyle}>\n//         <button style={closeButtonStyle} onClick={props?.onClose}>X</button>\n//         <h2>{props.recipe.name}</h2>\n//         <div style={{ marginTop: '10px' }}>\n//           <button\n//             onClick={handleRateButtonClick}\n//               style={{padding: '8px 16px',backgroundColor: '#ed2929ff',color: '#fff',border: 'none',borderRadius: '4px',\n//               cursor: 'pointer',}}>\n//             {rateButtonLabel}\n//           </button>\n//         </div>\n//         {/* Show rating stars */}\n//         {/* editable rating stars and save btn */}\n//         {showRating ? (\n//   <div style={{ marginTop: '10px'}}>\n//     <Rating\n//       onClick={handleRatingChange}\n//       size={30}\n//       initialValue={tempRating}\n//       allowHover\n//       allowFraction={false}\n//       transition\n//       fillColor=\"#FFD700\"\n//       emptyColor=\"#fff\"\n//       SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\n//     />\n\n//     <button\n//       onClick={handleSave}\n//       style={{\n//         marginTop: '10px',\n//         padding: '8px 16px',\n//         backgroundColor: '#28a745',\n//         color: '#fff',\n//         border: 'none',\n//         borderRadius: '4px',\n//         cursor: 'pointer',\n//       }}\n//     >\n//       Save\n//     </button>\n//   </div>\n// ) : (\n//   // tempRating > 0 readOnly rating show\n//   //jyare user aa koi rating choose na karyu hoi tyare \n//   tempRating > 0 && (\n//     <div style={{ marginTop: '10px' }}>\n//       <p><strong>Your Rating:</strong></p>\n//       <Rating\n//         readonly\n//         size={25}\n//         initialValue={tempRating}\n//         fillColor=\"#FFD700\"\n//         emptyColor=\"#fff\"\n//         SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\n//       />\n//     </div>\n//   )\n// )}\n\n//         <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\n//         <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\n//         <p><strong>Time:</strong> {props.recipe.time} hour</p>\n//         <p><strong>Instructions: </strong>{props.recipe.instructions}</p>\n//         {/* Ingredients can be displayed here if needed */}\n//         <p>Ingredients:</p>\n//         <ul>\n//           {props?.recipe.ingredients.map((ingredient, index) => (\n//             <li key={index}>{ingredient}</li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Rating } from 'react-simple-star-rating';\nimport { AuthContext } from '../utils/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetailsModal = props => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [showRating, setShowRating] = useState(false); //show star mate\n  const [tempRating, setTempRating] = useState(0);\n  useEffect(() => {\n    const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || []; //[{}]\n    const currentRecipe = storedRecipes.find(r => r.id === props.recipe.id); //{recipe no obj}\n    console.log(\"currentRecipe\", currentRecipe);\n    if (currentRecipe && Array.isArray(currentRecipe.ratings)) {\n      const userRatingObj = currentRecipe.ratings.find(r => r.userEmail === (user === null || user === void 0 ? void 0 : user.email)); //useremail per thi current\n      setTempRating(userRatingObj ? userRatingObj.rating : 0);\n    } else {\n      setTempRating(0);\n    }\n    setShowRating(false);\n  }, [props.recipe, user === null || user === void 0 ? void 0 : user.email]);\n  if (!props.recipe) return null;\n  const handleRatingChange = rate => {\n    setTempRating(rate);\n  };\n  const handleSave = () => {\n    const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\n    const updatedRecipes = storedRecipes.map(r => {\n      if (r.id === props.recipe.id) {\n        const existingRatings = Array.isArray(r.ratings) ? r.ratings : [];\n\n        // Remove old rating by current user (if any)\n        const filteredRatings = existingRatings.filter(rating => rating.userEmail !== (user === null || user === void 0 ? void 0 : user.email));\n\n        // Add new/updated rating\n        const newRating = {\n          userEmail: user === null || user === void 0 ? void 0 : user.email,\n          rating: tempRating\n        };\n        return {\n          ...r,\n          ratings: [...filteredRatings, newRating]\n        };\n      }\n      return r;\n    });\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes));\n    setShowRating(false);\n    if (props !== null && props !== void 0 && props.onRatingUpdate) props === null || props === void 0 ? void 0 : props.onRatingUpdate();\n  };\n  const rateButtonLabel = tempRating > 0 ? \"Edit Recipe Rating\" : \"Add Recipe Rating\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      backgroundColor: \"rgba(0,0,0,0.6)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#fff\",\n        padding: \"20px\",\n        borderRadius: \"8px\",\n        width: \"90%\",\n        maxWidth: \"500px\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          background: \"red\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\",\n          cursor: \"pointer\"\n        },\n        onClick: props === null || props === void 0 ? void 0 : props.onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: props.recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowRating(true),\n        style: {\n          marginTop: '10px',\n          padding: '8px 16px',\n          backgroundColor: '#ed2929ff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: rateButtonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), showRating ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          onClick: handleRatingChange,\n          size: 30,\n          initialValue: tempRating,\n          allowHover: true,\n          allowFraction: false,\n          transition: true,\n          fillColor: \"#FFD700\",\n          emptyColor: \"#fff\",\n          SVGstyle: {\n            stroke: 'black',\n            strokeWidth: 2,\n            margin: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            marginTop: '10px',\n            padding: '8px 16px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this) : tempRating > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Your Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          readonly: true,\n          size: 25,\n          initialValue: tempRating,\n          fillColor: \"#FFD700\",\n          emptyColor: \"#fff\",\n          SVGstyle: {\n            stroke: 'black',\n            strokeWidth: 2,\n            margin: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cuisine:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 12\n        }, this), \" \", props.recipe.cuisine]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Difficulty Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 12\n        }, this), \" \", props.recipe.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 12\n        }, this), \" \", props.recipe.time, \" hour\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 12\n        }, this), \" \", props.recipe.instructions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: props.recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetailsModal, \"UaY+MMvj3IHDbVayn0XpHm7UXOQ=\");\n_c = RecipeDetailsModal;\nexport default RecipeDetailsModal;\n\n// export default RecipeDetailsModal;\n//save rating localstorage and recipeDetailsModal\n//user login and first time add recipe show add recipe rate than second time edit recipe rate btn and edit\nvar _c;\n$RefreshReg$(_c, \"RecipeDetailsModal\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Rating","AuthContext","jsxDEV","_jsxDEV","RecipeDetailsModal","props","_s","user","showRating","setShowRating","tempRating","setTempRating","storedRecipes","JSON","parse","localStorage","getItem","currentRecipe","find","r","id","recipe","console","log","Array","isArray","ratings","userRatingObj","userEmail","email","rating","handleRatingChange","rate","handleSave","updatedRecipes","map","existingRatings","filteredRatings","filter","newRating","setItem","stringify","onRatingUpdate","rateButtonLabel","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","padding","borderRadius","maxWidth","maxHeight","overflowY","right","background","color","border","cursor","onClick","onClose","fileName","_jsxFileName","lineNumber","columnNumber","name","marginTop","size","initialValue","allowHover","allowFraction","transition","fillColor","emptyColor","SVGstyle","stroke","strokeWidth","margin","readonly","cuisine","difficulty","time","instructions","ingredients","ingredient","index","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/react recipe-project/recipe-manager/src/Components/RecipeDetailsModal.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { Rating } from 'react-simple-star-rating';\r\n\r\n// const RecipeDetailsModal = (props) => {\r\n//   const [showRating,setShowRating] = useState(false);//star batave\r\n//   // console.log(\"setShowRating\",showRating);\r\n  \r\n//   const [tempRating, setTempRating] = useState(0);\r\n//   // console.log(\"setTempRating\",tempRating);\r\n//   useEffect(() => {\r\n//     // const initialRating = props?.recipe?.rating || 0;\r\n//     // setFinalRating(props?.recipe?.rating || 0);\r\n//     setTempRating(props?.recipe?.rating || 0);\r\n//     setShowRating(false);//star mode close\r\n//   }, [props?.recipe]);//recipe change thay tyare chale\r\n\r\n//   if (!props?.recipe) return null;\r\n\r\n//   const rateButtonLabel = tempRating > 0 ? \"Edit recipe Rate\" : \"Add recipe Rate\";\r\n//   //rating hoi to label edit show thase baki add show\r\n\r\n//   const modalOverlayStyle = {\r\n//     position: \"fixed\",\r\n//     top: 0,\r\n//     left: 0,\r\n//     width: \"100vw\",\r\n//     height: \"100vh\",\r\n//     backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     zIndex: 1000,\r\n//   };\r\n\r\n//   const modalContentStyle = {\r\n//     backgroundColor: \"#fff\",\r\n//     padding: \"20px\",\r\n//     borderRadius: \"8px\",\r\n//     width: \"90%\",\r\n//     maxWidth: \"500px\",\r\n//     maxHeight: \"80vh\",\r\n//     overflowY: \"auto\",\r\n//     position: \"relative\",\r\n//   };\r\n\r\n//   const closeButtonStyle = {\r\n//     position: \"absolute\",\r\n//     top: \"10px\",\r\n//     right: \"10px\",\r\n//     background: \"red\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     borderRadius: \"4px\",\r\n//     padding: \"5px 10px\",\r\n//     cursor: \"pointer\",\r\n//   };\r\n\r\n//   // const handleClose = () => {\r\n//   //   setIsOpen(false);\r\n//   // };\r\n\r\n//   const handleRateButtonClick = () => {\r\n//       setShowRating(true);\r\n//       //user add/edit btn click kare tyare rating edit ui mate true\r\n//   }\r\n\r\n//   const handleRatingChange = (rate) => {\r\n//     setTempRating(rate);\r\n//     //user rating star click tyare te rating tempRating ma set\r\n//   };\r\n\r\n//   const handleSave = () => {\r\n//     const recipes = JSON.parse(localStorage.getItem('recipes')) || [];//recipe get [{}]\r\n//     const updatedRecipes = recipes.map((r) =>\r\n//       r.id === props?.recipe.id ? { ...r, rating: tempRating } : r\r\n//     );//r.id === props?.recipe.id - true (recipe obj(...r- r obj ne badhi property copy kare na)\r\n//     //rating property na nava temp rating value thi update karvi.) \r\n//     //false to r array ma j hase.\r\n//     localStorage.setItem('recipes', JSON.stringify(updatedRecipes));//store recipe\r\n//     // console.log(\"updatedRecipes\",updatedRecipes);[{}]\r\n//     setTempRating(tempRating);//rating 5,4\r\n//     //console.log(\"setTempRating\",tempRating);\r\n//     setShowRating(false);\r\n//     if (props?.onRatingUpdate) props?.onRatingUpdate();\r\n//   };\r\n\r\n//   return (\r\n//     <div style={modalOverlayStyle}>\r\n//       <div style={modalContentStyle}>\r\n//         <button style={closeButtonStyle} onClick={props?.onClose}>X</button>\r\n//         <h2>{props.recipe.name}</h2>\r\n//         <div style={{ marginTop: '10px' }}>\r\n//           <button\r\n//             onClick={handleRateButtonClick}\r\n//               style={{padding: '8px 16px',backgroundColor: '#ed2929ff',color: '#fff',border: 'none',borderRadius: '4px',\r\n//               cursor: 'pointer',}}>\r\n//             {rateButtonLabel}\r\n//           </button>\r\n//         </div>\r\n//         {/* Show rating stars */}\r\n//         {/* editable rating stars and save btn */}\r\n//         {showRating ? (\r\n//   <div style={{ marginTop: '10px'}}>\r\n//     <Rating\r\n//       onClick={handleRatingChange}\r\n//       size={30}\r\n//       initialValue={tempRating}\r\n//       allowHover\r\n//       allowFraction={false}\r\n//       transition\r\n//       fillColor=\"#FFD700\"\r\n//       emptyColor=\"#fff\"\r\n//       SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n//     />\r\n\r\n//     <button\r\n//       onClick={handleSave}\r\n//       style={{\r\n//         marginTop: '10px',\r\n//         padding: '8px 16px',\r\n//         backgroundColor: '#28a745',\r\n//         color: '#fff',\r\n//         border: 'none',\r\n//         borderRadius: '4px',\r\n//         cursor: 'pointer',\r\n//       }}\r\n//     >\r\n//       Save\r\n//     </button>\r\n//   </div>\r\n// ) : (\r\n//   // tempRating > 0 readOnly rating show\r\n//   //jyare user aa koi rating choose na karyu hoi tyare \r\n//   tempRating > 0 && (\r\n//     <div style={{ marginTop: '10px' }}>\r\n//       <p><strong>Your Rating:</strong></p>\r\n//       <Rating\r\n//         readonly\r\n//         size={25}\r\n//         initialValue={tempRating}\r\n//         fillColor=\"#FFD700\"\r\n//         emptyColor=\"#fff\"\r\n//         SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n//       />\r\n//     </div>\r\n//   )\r\n// )}\r\n        \r\n//         <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\r\n//         <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\r\n//         <p><strong>Time:</strong> {props.recipe.time} hour</p>\r\n//         <p><strong>Instructions: </strong>{props.recipe.instructions}</p>\r\n//         {/* Ingredients can be displayed here if needed */}\r\n//         <p>Ingredients:</p>\r\n//         <ul>\r\n//           {props?.recipe.ingredients.map((ingredient, index) => (\r\n//             <li key={index}>{ingredient}</li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Rating } from 'react-simple-star-rating';\r\nimport { AuthContext } from '../utils/Auth';\r\n\r\nconst RecipeDetailsModal = (props) => {\r\n  const { user } = useContext(AuthContext);\r\n  const [showRating, setShowRating] = useState(false);//show star mate\r\n  const [tempRating, setTempRating] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];//[{}]\r\n    const currentRecipe = storedRecipes.find(r => r.id === props.recipe.id);//{recipe no obj}\r\n    console.log(\"currentRecipe\",currentRecipe);\r\n    \r\n    if (currentRecipe && Array.isArray(currentRecipe.ratings)) {\r\n      const userRatingObj = currentRecipe.ratings.find(r => r.userEmail === user?.email);//useremail per thi current\r\n      setTempRating(userRatingObj ? userRatingObj.rating : 0);\r\n    } else {\r\n      setTempRating(0);\r\n    }\r\n\r\n    setShowRating(false);\r\n  }, [props.recipe, user?.email]);\r\n\r\n  if (!props.recipe) return null;\r\n\r\n  const handleRatingChange = (rate) => {\r\n    setTempRating(rate);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\r\n\r\n    const updatedRecipes = storedRecipes.map(r => {\r\n      if (r.id === props.recipe.id) {\r\n        const existingRatings = Array.isArray(r.ratings) ? r.ratings : [];\r\n\r\n        // Remove old rating by current user (if any)\r\n        const filteredRatings = existingRatings.filter(rating => rating.userEmail !== user?.email);\r\n\r\n        // Add new/updated rating\r\n        const newRating = { userEmail: user?.email, rating: tempRating };\r\n        return { ...r, ratings: [...filteredRatings, newRating] };\r\n      }\r\n      return r;\r\n    });\r\n\r\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes));\r\n    setShowRating(false);\r\n    if (props?.onRatingUpdate) props?.onRatingUpdate();\r\n  };\r\n\r\n  const rateButtonLabel = tempRating > 0 ? \"Edit Recipe Rating\" : \"Add Recipe Rating\";\r\n\r\n  return (\r\n    <div style={{\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      backgroundColor: \"rgba(0,0,0,0.6)\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      zIndex: 1000,\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: \"#fff\",\r\n        padding: \"20px\",\r\n        borderRadius: \"8px\",\r\n        width: \"90%\",\r\n        maxWidth: \"500px\",\r\n        maxHeight: \"80vh\",\r\n        overflowY: \"auto\",\r\n        position: \"relative\",\r\n      }}>\r\n        <button style={{\r\n          position: \"absolute\",\r\n          top: \"10px\",\r\n          right: \"10px\",\r\n          background: \"red\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"4px\",\r\n          padding: \"5px 10px\",\r\n          cursor: \"pointer\",\r\n        }} onClick={props?.onClose}>X</button>\r\n\r\n        <h2>{props.recipe.name}</h2>\r\n\r\n        <button\r\n          onClick={() => setShowRating(true)}\r\n          style={{\r\n            marginTop: '10px',\r\n            padding: '8px 16px',\r\n            backgroundColor: '#ed2929ff',\r\n            color: '#fff',\r\n            border: 'none',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n          }}>\r\n          {rateButtonLabel}\r\n        </button>\r\n\r\n        {showRating ? (\r\n          <div style={{ marginTop: '10px' }}>\r\n            <Rating\r\n              onClick={handleRatingChange}\r\n              size={30}\r\n              initialValue={tempRating}\r\n              allowHover\r\n              allowFraction={false}\r\n              transition\r\n              fillColor=\"#FFD700\"\r\n              emptyColor=\"#fff\"\r\n              SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n            />\r\n            <button\r\n              onClick={handleSave}\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '8px 16px',\r\n                backgroundColor: '#28a745',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n              }}>\r\n              Save\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          tempRating > 0 && (\r\n            <div style={{ marginTop: '10px' }}>\r\n              <p><strong>Your Rating:</strong></p>\r\n              <Rating\r\n                readonly\r\n                size={25}\r\n                initialValue={tempRating}\r\n                fillColor=\"#FFD700\"\r\n                emptyColor=\"#fff\"\r\n                SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n              />\r\n            </div>\r\n          )\r\n        )}\r\n\r\n        <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\r\n        <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\r\n        <p><strong>Time:</strong> {props.recipe.time} hour</p>\r\n        <p><strong>Instructions:</strong> {props.recipe.instructions}</p>\r\n\r\n        <p><strong>Ingredients:</strong></p>\r\n        <ul>\r\n          {props.recipe.ingredients.map((ingredient, index) => (\r\n            <li key={index}>{ingredient}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetailsModal;\r\n\r\n// export default RecipeDetailsModal;\r\n//save rating localstorage and recipeDetailsModal\r\n//user login and first time add recipe show add recipe rate than second time edit recipe rate btn and edit"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpC,MAAM;IAAEC;EAAK,CAAC,GAAGR,UAAU,CAACE,WAAW,CAAC;EACxC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC,CAAC;EACpD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACd,MAAMe,aAAa,GAAGC,IAAI,CAACC,KAAK,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}