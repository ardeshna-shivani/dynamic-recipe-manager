{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\react recipe-project\\\\recipe-manager\\\\frontend\\\\src\\\\Components\\\\RecipeDetailsModal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState, useContext } from 'react';\n// import { Rating } from 'react-simple-star-rating';\n// import { AuthContext } from '../utils/Auth';\n\n// const RecipeDetailsModal = (props) => {\n//   const { user } = useContext(AuthContext);\n//   const [showRating, setShowRating] = useState(false);//show star mate\n//   const [tempRating, setTempRating] = useState(0);\n//   const [originalRating, setOriginalRating] = useState(0);\n//   const [saveMessage, setSaveMessage] = useState('');\n//   const [loading, setLoading] = useState(false);\n\n//   // useEffect(() => {\n//   //   const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];//[{}]\n//   //   const currentRecipe = storedRecipes.find(r => r.id === props.recipe.id);//{selected recipe no obj} //match by id\n//   //   // console.log(\"currentRecipe\",currentRecipe);\n\n//   //   if (currentRecipe && Array.isArray(currentRecipe.ratings)) {//rating array \n//   //     const userRatingObj = currentRecipe.ratings.find(r => r.userEmail === user?.email);//useremail per thi currentRecipe rating find\n//   //     console.log(\"userRatingObj (matched by email):\", userRatingObj); //{userEmail: 'test1@gmail.com', rating: 4}\n\n//   //     const ratingToSet = userRatingObj ? userRatingObj.rating : 0\n//   //     setTempRating(ratingToSet);\n//   //     console.log(\"ratingToSet\",ratingToSet);//4\n\n//   //   } else {\n//   //     setTempRating(0);\n//   //   }\n\n//   //   setShowRating(false);\n//   //   console.log(\"Rating UI hidden (setShowRating = false)\");\n//   // }, [props.recipe, user?.email]);\n\n//     const fetchUserRating = async () => {\n//       if(!props?.recipe || !user?.email) return\n//       try{\n//         const response = await fetch(`http://localhost:5000/api/recipes/${props.recipe._id}`)\n//         const data = await response.json();\n//         const userRatingObj = data.rating?.find(r => r.userEmail === user.email);\n//         const ratingValue = userRatingObj ? userRatingObj.rating : 0;\n//         setTempRating(ratingValue);\n//         setOriginalRating(ratingValue);\n//         setShowRating(false);\n//       }\n//       catch(err){\n//         console.log(\"Error fetching recipe rating: \",err);\n//         setTempRating(0);\n//         setOriginalRating(0);\n\n//       }\n//     } \n\n//     useEffect(() => {\n//       fetchUserRating();\n//     },[props?.recipe,user?.email])\n\n//   if (!props.recipe) return null;\n\n//   const handleRatingChange = (rate) => {\n//     setTempRating(rate);//user new rating per click kare tyare temprating change\n//   };\n\n//   // const handleSave = () => {\n//   //   const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];//[{}]\n\n//   //   const updatedRecipes = storedRecipes.map(r => {\n//   //     if (r.id === props.recipe.id) {\n//   //       const existingRatings = Array.isArray(r.ratings) ? r.ratings : [];\n//   //       //Array.isArray(r.ratings) - r.ratings aa ak array cha k nahi\n//   //       // console.log(\"existingRatings\",existingRatings);//[{useremail,rating}]\n//   //       // Remove old rating by current user (if any)\n//   //       const filteredRatings = existingRatings.filter(rating => rating.userEmail !== user?.email);\n//   //       // console.log(\"filteredRatings\",filteredRatings);//[{useremail,rating}]\n//   //       //juna rating mathi current user rating remove(old rating remove)\n\n//   //       // Add new/updated rating\n//   //       const newRating = { userEmail: user?.email, rating: tempRating };\n//   //       // console.log(\"newRating\",newRating);//{userEmail: 'test@gmail.com', rating: 5}\n//   //       const updatedRating = { ...r, ratings: [...filteredRatings, newRating] }\n//   //       // console.log(\"filteredRatings\",[...filteredRatings, newRating]);\n//   //       // console.log(\"newRating\",newRating);\n\n//   //       console.log(\"updatedRating\",updatedRating);//{recipe}\n\n//   //       return updatedRating;\n//   //     }\n//   //     return r;\n//   //   });\n\n//   //   localStorage.setItem('recipes', JSON.stringify(updatedRecipes));//[{}]\n//   //   setShowRating(false);\n//   //   if (props?.onRatingUpdate) props?.onRatingUpdate();\n//   // };\n\n//   const handleSave = async () => {\n//   try {\n//     setLoading(true)\n//     const response = await fetch(`http://localhost:5000/api/recipes/${props.recipe._id}`, {\n//       method: 'PUT',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({userEmail: user?.email,rating: tempRating}),\n//     });\n\n//     if (!response.ok) {\n//       throw new Error(\"Failed to update rating\");\n//     }\n//     setOriginalRating(tempRating);\n//     setShowRating(false);\n//     setSaveMessage(\"Rating Saved!\");\n//     if (props?.onRatingUpdate) props.onRatingUpdate(); // re-fetch list\n//   } catch (error) {\n//     console.error(\"Error saving rating:\", error);\n//   }\n//   finally{\n//     setLoading(false);\n//   }\n// };\n\n//   const rateButtonLabel = tempRating === originalRating > 0 ? \"Edit Recipe Rating\" : \"Add Recipe Rating\";\n//   //temprating 0 karta vadhare hoi to edit show otherwise add\n//   console.log(\"tempRating Rating:\", tempRating);\n//   console.log(\"Rate Button Label:\", rateButtonLabel);\n//   return (\n//     <div style={{\n//       position: \"fixed\",\n//       top: 0,\n//       left: 0,\n//       width: \"100vw\",\n//       height: \"100vh\",\n//       backgroundColor: \"rgba(0,0,0,0.6)\",\n//       display: \"flex\",\n//       justifyContent: \"center\",\n//       alignItems: \"center\",\n//       zIndex: 1000,\n//     }}>\n//       <div style={{\n//         backgroundColor: \"#fff\",\n//         padding: \"20px\",\n//         borderRadius: \"8px\",\n//         width: \"90%\",\n//         maxWidth: \"500px\",\n//         maxHeight: \"80vh\",\n//         overflowY: \"auto\",\n//         position: \"relative\",\n//       }}>\n//         <button style={{\n//           position: \"absolute\",\n//           top: \"10px\",\n//           right: \"10px\",\n//           background: \"red\",\n//           color: \"white\",\n//           border: \"none\",\n//           borderRadius: \"4px\",\n//           padding: \"5px 10px\",\n//           cursor: \"pointer\",\n//         }} onClick={props?.onClose}>X</button>\n\n//         <h2>{props.recipe.name}</h2>\n\n//         <button\n//           onClick={() => setShowRating(true)}\n//           style={{\n//             marginTop: '10px',\n//             padding: '8px 16px',\n//             backgroundColor: '#ed2929ff',\n//             color: '#fff',\n//             border: 'none',\n//             borderRadius: '4px',\n//             cursor: 'pointer',\n//           }}>\n//           {rateButtonLabel}\n//         </button>\n\n//         {showRating ? (\n//           <div style={{ marginTop: '10px' }}>\n//             <Rating\n//               onClick={handleRatingChange}\n//               size={30}\n//               initialValue={tempRating}\n//               allowHover\n//               allowFraction={false}\n//               transition\n//               fillColor=\"#FFD700\"\n//               emptyColor=\"#fff\"\n//               SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\n//             />\n//             <button\n//               onClick={handleSave}\n//               style={{\n//                 marginTop: '10px',\n//                 padding: '8px 16px',\n//                 backgroundColor: '#28a745',\n//                 color: '#fff',\n//                 border: 'none',\n//                 borderRadius: '4px',\n//                 cursor: 'pointer',\n//               }}>\n\n//             </button>\n//             {saveMessage && (\n//               <p style={{ color: 'green', marginTop: '8px' }}>{saveMessage}</p>\n//             )}\n//           </div>\n//         ) : (\n//           tempRating > 0 && (\n//             <div style={{ marginTop: '10px' }}>\n//               <p><strong>Your Rating:</strong></p>\n//               <Rating\n//                 readonly\n//                 size={25}\n//                 initialValue={tempRating}\n//                 fillColor=\"#FFD700\"\n//                 emptyColor=\"#fff\"\n//                 SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\n//               />\n//             </div>\n//           )\n//         )}\n\n//         <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\n//         <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\n//         <p><strong>Time:</strong> {props.recipe.time} hour</p>\n//         <p><strong>Instructions:</strong> {props.recipe.instructions}</p>\n\n//         <p><strong>Ingredients:</strong></p>\n//         <ul>\n//           {props.recipe.ingredients.map((ingredient, index) => (\n//             <li key={index}>{ingredient}</li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecipeDetailsModal;\n\n//user have already rate recipe\n//than second time rate tempRating 0\n//i have tempRating current user rate show \n\nimport React, { useEffect, useState, useContext } from 'react';\nimport { Rating } from 'react-simple-star-rating';\nimport { AuthContext } from '../utils/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetailsModal = () => {\n  _s();\n  var _props2, _props3, _props4, _props5, _props6, _props7, _props8, _props9;\n  const {\n    user\n  } = useContext(AuthContext);\n  const [showRating, setShowRating] = useState(false);\n  const [tempRating, setTempRating] = useState(0);\n  const [originalRating, setOriginalRating] = useState(0);\n  const [saveMessage, setSaveMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [ratingLoaded, setRatingLoaded] = useState(false);\n  useEffect(() => {\n    if (!recipe || !(user !== null && user !== void 0 && user.email)) {\n      // Modal closed or no user: reset states\n      setTempRating(0);\n      setOriginalRating(0);\n      setShowRating(false);\n      setRatingLoaded(false);\n      return;\n    }\n\n    // Modal opened - fetch user rating fresh\n    const fetchUserRating = async () => {\n      try {\n        var _data$rating;\n        const res = await fetch(`http://localhost:5000/api/recipes/${recipe._id}`);\n        const data = await res.json();\n        const userRatingObj = (_data$rating = data.rating) === null || _data$rating === void 0 ? void 0 : _data$rating.find(r => r.userEmail === user.email);\n        const value = userRatingObj ? userRatingObj.rating : 0;\n        setTempRating(value);\n        setOriginalRating(value);\n      } catch (err) {\n        console.error('Error fetching user rating:', err);\n        setTempRating(0);\n        setOriginalRating(0);\n      } finally {\n        setRatingLoaded(true);\n        setShowRating(false);\n      }\n    };\n    fetchUserRating();\n  }, [recipe, user === null || user === void 0 ? void 0 : user.email]);\n  const handleRatingChange = rate => {\n    setTempRating(rate);\n  };\n  const handleSave = async () => {\n    setLoading(true);\n    try {\n      var _props;\n      const response = await fetch(`http://localhost:5000/api/recipes/${props.recipe._id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userEmail: user === null || user === void 0 ? void 0 : user.email,\n          rating: tempRating\n        })\n      });\n      if (!response.ok) throw new Error('Failed to save rating');\n      setOriginalRating(tempRating);\n      setShowRating(false);\n      setSaveMessage('Rating Saved!');\n      if ((_props = props) !== null && _props !== void 0 && _props.onRatingUpdate) props.onRatingUpdate();\n    } catch (error) {\n      console.error('Error saving rating:', error);\n      setSaveMessage('Failed to save rating.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const rateButtonLabel = ratingLoaded ? originalRating > 0 ? 'Edit Recipe Rating' : 'Add Recipe Rating' : 'Loading...';\n  useEffect(() => {\n    if (ratingLoaded) {\n      console.log(\"=== Rating Debug Info ===\");\n      console.log(\"originalRating:\", originalRating);\n      console.log(\"tempRating:\", tempRating);\n      console.log(\"rateButtonLabel:\", rateButtonLabel);\n      console.log(\"Condition:\", originalRating > 0 ? \"Editing existing rating\" : \"Adding new rating\");\n      console.log(\"=========================\");\n    }\n  }, [ratingLoaded, originalRating, tempRating]);\n  if (!((_props2 = props) !== null && _props2 !== void 0 && _props2.recipe)) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      backgroundColor: \"rgba(0,0,0,0.6)\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#fff\",\n        padding: \"20px\",\n        borderRadius: \"8px\",\n        width: \"90%\",\n        maxWidth: \"500px\",\n        maxHeight: \"80vh\",\n        overflowY: \"auto\",\n        position: \"relative\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: \"absolute\",\n          top: \"10px\",\n          right: \"10px\",\n          background: \"red\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\",\n          cursor: \"pointer\"\n        },\n        onClick: (_props3 = props) === null || _props3 === void 0 ? void 0 : _props3.onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (_props4 = props) === null || _props4 === void 0 ? void 0 : _props4.recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this), ratingLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowRating(true),\n        style: {\n          marginTop: '10px',\n          padding: '8px 16px',\n          backgroundColor: '#ed2929ff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: rateButtonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), showRating ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          onClick: handleRatingChange,\n          size: 30,\n          initialValue: tempRating,\n          allowHover: true,\n          allowFraction: false,\n          transition: true,\n          fillColor: \"#FFD700\",\n          emptyColor: \"#fff\",\n          SVGstyle: {\n            stroke: 'black',\n            strokeWidth: 2,\n            margin: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            marginTop: '10px',\n            padding: '8px 16px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: loading ? 'Saving...' : 'Save Rating'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 415,\n          columnNumber: 13\n        }, this), saveMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green',\n            marginTop: '8px'\n          },\n          children: saveMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this) : ratingLoaded && tempRating > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Your Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          readonly: true,\n          size: 25,\n          initialValue: tempRating,\n          fillColor: \"#FFD700\",\n          emptyColor: \"#fff\",\n          SVGstyle: {\n            stroke: 'black',\n            strokeWidth: 2,\n            margin: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cuisine:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 12\n        }, this), \" \", (_props5 = props) === null || _props5 === void 0 ? void 0 : _props5.recipe.cuisine]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Difficulty Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 12\n        }, this), \" \", (_props6 = props) === null || _props6 === void 0 ? void 0 : _props6.recipe.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 12\n        }, this), \" \", (_props7 = props) === null || _props7 === void 0 ? void 0 : _props7.recipe.time, \" hour\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Instructions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 12\n        }, this), \" \", (_props8 = props) === null || _props8 === void 0 ? void 0 : _props8.recipe.instructions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Ingredients:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: (_props9 = props) === null || _props9 === void 0 ? void 0 : _props9.recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 350,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetailsModal, \"UARItyUN4aA8Ta40jHuqNVHzP7g=\");\n_c = RecipeDetailsModal;\nexport default RecipeDetailsModal;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetailsModal\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Rating","AuthContext","jsxDEV","_jsxDEV","RecipeDetailsModal","_s","_props2","_props3","_props4","_props5","_props6","_props7","_props8","_props9","user","showRating","setShowRating","tempRating","setTempRating","originalRating","setOriginalRating","saveMessage","setSaveMessage","loading","setLoading","ratingLoaded","setRatingLoaded","recipe","email","fetchUserRating","_data$rating","res","fetch","_id","data","json","userRatingObj","rating","find","r","userEmail","value","err","console","error","handleRatingChange","rate","handleSave","_props","response","props","method","headers","body","JSON","stringify","ok","Error","onRatingUpdate","rateButtonLabel","log","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","padding","borderRadius","maxWidth","maxHeight","overflowY","right","background","color","border","cursor","onClick","onClose","fileName","_jsxFileName","lineNumber","columnNumber","name","marginTop","size","initialValue","allowHover","allowFraction","transition","fillColor","emptyColor","SVGstyle","stroke","strokeWidth","margin","readonly","cuisine","difficulty","time","instructions","ingredients","map","ingredient","index","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/react recipe-project/recipe-manager/frontend/src/Components/RecipeDetailsModal.jsx"],"sourcesContent":["// import React, { useEffect, useState, useContext } from 'react';\r\n// import { Rating } from 'react-simple-star-rating';\r\n// import { AuthContext } from '../utils/Auth';\r\n\r\n// const RecipeDetailsModal = (props) => {\r\n//   const { user } = useContext(AuthContext);\r\n//   const [showRating, setShowRating] = useState(false);//show star mate\r\n//   const [tempRating, setTempRating] = useState(0);\r\n//   const [originalRating, setOriginalRating] = useState(0);\r\n//   const [saveMessage, setSaveMessage] = useState('');\r\n//   const [loading, setLoading] = useState(false);\r\n\r\n//   // useEffect(() => {\r\n//   //   const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];//[{}]\r\n//   //   const currentRecipe = storedRecipes.find(r => r.id === props.recipe.id);//{selected recipe no obj} //match by id\r\n//   //   // console.log(\"currentRecipe\",currentRecipe);\r\n\r\n//   //   if (currentRecipe && Array.isArray(currentRecipe.ratings)) {//rating array \r\n//   //     const userRatingObj = currentRecipe.ratings.find(r => r.userEmail === user?.email);//useremail per thi currentRecipe rating find\r\n//   //     console.log(\"userRatingObj (matched by email):\", userRatingObj); //{userEmail: 'test1@gmail.com', rating: 4}\r\n\r\n//   //     const ratingToSet = userRatingObj ? userRatingObj.rating : 0\r\n//   //     setTempRating(ratingToSet);\r\n//   //     console.log(\"ratingToSet\",ratingToSet);//4\r\n\r\n//   //   } else {\r\n//   //     setTempRating(0);\r\n//   //   }\r\n\r\n//   //   setShowRating(false);\r\n//   //   console.log(\"Rating UI hidden (setShowRating = false)\");\r\n//   // }, [props.recipe, user?.email]);\r\n\r\n\r\n//     const fetchUserRating = async () => {\r\n//       if(!props?.recipe || !user?.email) return\r\n//       try{\r\n//         const response = await fetch(`http://localhost:5000/api/recipes/${props.recipe._id}`)\r\n//         const data = await response.json();\r\n//         const userRatingObj = data.rating?.find(r => r.userEmail === user.email);\r\n//         const ratingValue = userRatingObj ? userRatingObj.rating : 0;\r\n//         setTempRating(ratingValue);\r\n//         setOriginalRating(ratingValue);\r\n//         setShowRating(false);\r\n//       }\r\n//       catch(err){\r\n//         console.log(\"Error fetching recipe rating: \",err);\r\n//         setTempRating(0);\r\n//         setOriginalRating(0);\r\n\r\n//       }\r\n//     } \r\n\r\n//     useEffect(() => {\r\n//       fetchUserRating();\r\n//     },[props?.recipe,user?.email])\r\n\r\n//   if (!props.recipe) return null;\r\n\r\n//   const handleRatingChange = (rate) => {\r\n//     setTempRating(rate);//user new rating per click kare tyare temprating change\r\n//   };\r\n\r\n//   // const handleSave = () => {\r\n//   //   const storedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];//[{}]\r\n\r\n//   //   const updatedRecipes = storedRecipes.map(r => {\r\n//   //     if (r.id === props.recipe.id) {\r\n//   //       const existingRatings = Array.isArray(r.ratings) ? r.ratings : [];\r\n//   //       //Array.isArray(r.ratings) - r.ratings aa ak array cha k nahi\r\n//   //       // console.log(\"existingRatings\",existingRatings);//[{useremail,rating}]\r\n//   //       // Remove old rating by current user (if any)\r\n//   //       const filteredRatings = existingRatings.filter(rating => rating.userEmail !== user?.email);\r\n//   //       // console.log(\"filteredRatings\",filteredRatings);//[{useremail,rating}]\r\n//   //       //juna rating mathi current user rating remove(old rating remove)\r\n\r\n//   //       // Add new/updated rating\r\n//   //       const newRating = { userEmail: user?.email, rating: tempRating };\r\n//   //       // console.log(\"newRating\",newRating);//{userEmail: 'test@gmail.com', rating: 5}\r\n//   //       const updatedRating = { ...r, ratings: [...filteredRatings, newRating] }\r\n//   //       // console.log(\"filteredRatings\",[...filteredRatings, newRating]);\r\n//   //       // console.log(\"newRating\",newRating);\r\n\r\n\r\n//   //       console.log(\"updatedRating\",updatedRating);//{recipe}\r\n\r\n//   //       return updatedRating;\r\n//   //     }\r\n//   //     return r;\r\n//   //   });\r\n\r\n//   //   localStorage.setItem('recipes', JSON.stringify(updatedRecipes));//[{}]\r\n//   //   setShowRating(false);\r\n//   //   if (props?.onRatingUpdate) props?.onRatingUpdate();\r\n//   // };\r\n\r\n\r\n//   const handleSave = async () => {\r\n//   try {\r\n//     setLoading(true)\r\n//     const response = await fetch(`http://localhost:5000/api/recipes/${props.recipe._id}`, {\r\n//       method: 'PUT',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({userEmail: user?.email,rating: tempRating}),\r\n//     });\r\n\r\n//     if (!response.ok) {\r\n//       throw new Error(\"Failed to update rating\");\r\n//     }\r\n//     setOriginalRating(tempRating);\r\n//     setShowRating(false);\r\n//     setSaveMessage(\"Rating Saved!\");\r\n//     if (props?.onRatingUpdate) props.onRatingUpdate(); // re-fetch list\r\n//   } catch (error) {\r\n//     console.error(\"Error saving rating:\", error);\r\n//   }\r\n//   finally{\r\n//     setLoading(false);\r\n//   }\r\n// };\r\n\r\n//   const rateButtonLabel = tempRating === originalRating > 0 ? \"Edit Recipe Rating\" : \"Add Recipe Rating\";\r\n//   //temprating 0 karta vadhare hoi to edit show otherwise add\r\n//   console.log(\"tempRating Rating:\", tempRating);\r\n//   console.log(\"Rate Button Label:\", rateButtonLabel);\r\n//   return (\r\n//     <div style={{\r\n//       position: \"fixed\",\r\n//       top: 0,\r\n//       left: 0,\r\n//       width: \"100vw\",\r\n//       height: \"100vh\",\r\n//       backgroundColor: \"rgba(0,0,0,0.6)\",\r\n//       display: \"flex\",\r\n//       justifyContent: \"center\",\r\n//       alignItems: \"center\",\r\n//       zIndex: 1000,\r\n//     }}>\r\n//       <div style={{\r\n//         backgroundColor: \"#fff\",\r\n//         padding: \"20px\",\r\n//         borderRadius: \"8px\",\r\n//         width: \"90%\",\r\n//         maxWidth: \"500px\",\r\n//         maxHeight: \"80vh\",\r\n//         overflowY: \"auto\",\r\n//         position: \"relative\",\r\n//       }}>\r\n//         <button style={{\r\n//           position: \"absolute\",\r\n//           top: \"10px\",\r\n//           right: \"10px\",\r\n//           background: \"red\",\r\n//           color: \"white\",\r\n//           border: \"none\",\r\n//           borderRadius: \"4px\",\r\n//           padding: \"5px 10px\",\r\n//           cursor: \"pointer\",\r\n//         }} onClick={props?.onClose}>X</button>\r\n\r\n//         <h2>{props.recipe.name}</h2>\r\n\r\n//         <button\r\n//           onClick={() => setShowRating(true)}\r\n//           style={{\r\n//             marginTop: '10px',\r\n//             padding: '8px 16px',\r\n//             backgroundColor: '#ed2929ff',\r\n//             color: '#fff',\r\n//             border: 'none',\r\n//             borderRadius: '4px',\r\n//             cursor: 'pointer',\r\n//           }}>\r\n//           {rateButtonLabel}\r\n//         </button>\r\n\r\n//         {showRating ? (\r\n//           <div style={{ marginTop: '10px' }}>\r\n//             <Rating\r\n//               onClick={handleRatingChange}\r\n//               size={30}\r\n//               initialValue={tempRating}\r\n//               allowHover\r\n//               allowFraction={false}\r\n//               transition\r\n//               fillColor=\"#FFD700\"\r\n//               emptyColor=\"#fff\"\r\n//               SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n//             />\r\n//             <button\r\n//               onClick={handleSave}\r\n//               style={{\r\n//                 marginTop: '10px',\r\n//                 padding: '8px 16px',\r\n//                 backgroundColor: '#28a745',\r\n//                 color: '#fff',\r\n//                 border: 'none',\r\n//                 borderRadius: '4px',\r\n//                 cursor: 'pointer',\r\n//               }}>\r\n\r\n//             </button>\r\n//             {saveMessage && (\r\n//               <p style={{ color: 'green', marginTop: '8px' }}>{saveMessage}</p>\r\n//             )}\r\n//           </div>\r\n//         ) : (\r\n//           tempRating > 0 && (\r\n//             <div style={{ marginTop: '10px' }}>\r\n//               <p><strong>Your Rating:</strong></p>\r\n//               <Rating\r\n//                 readonly\r\n//                 size={25}\r\n//                 initialValue={tempRating}\r\n//                 fillColor=\"#FFD700\"\r\n//                 emptyColor=\"#fff\"\r\n//                 SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n//               />\r\n//             </div>\r\n//           )\r\n//         )}\r\n\r\n//         <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\r\n//         <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\r\n//         <p><strong>Time:</strong> {props.recipe.time} hour</p>\r\n//         <p><strong>Instructions:</strong> {props.recipe.instructions}</p>\r\n\r\n//         <p><strong>Ingredients:</strong></p>\r\n//         <ul>\r\n//           {props.recipe.ingredients.map((ingredient, index) => (\r\n//             <li key={index}>{ingredient}</li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default RecipeDetailsModal;\r\n\r\n//user have already rate recipe\r\n//than second time rate tempRating 0\r\n//i have tempRating current user rate show \r\n\r\n\r\n\r\nimport React, { useEffect, useState, useContext } from 'react';\r\nimport { Rating } from 'react-simple-star-rating';\r\nimport { AuthContext } from '../utils/Auth';\r\n\r\nconst RecipeDetailsModal = () => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  const [showRating, setShowRating] = useState(false);\r\n  const [tempRating, setTempRating] = useState(0);\r\n  const [originalRating, setOriginalRating] = useState(0);\r\n  const [saveMessage, setSaveMessage] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [ratingLoaded, setRatingLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n  if (!recipe || !user?.email) {\r\n    // Modal closed or no user: reset states\r\n    setTempRating(0);\r\n    setOriginalRating(0);\r\n    setShowRating(false);\r\n    setRatingLoaded(false);\r\n    return;\r\n  }\r\n\r\n  // Modal opened - fetch user rating fresh\r\n  const fetchUserRating = async () => {\r\n    try {\r\n      const res = await fetch(`http://localhost:5000/api/recipes/${recipe._id}`);\r\n      const data = await res.json();\r\n      const userRatingObj = data.rating?.find(r => r.userEmail === user.email);\r\n      const value = userRatingObj ? userRatingObj.rating : 0;\r\n\r\n      setTempRating(value);\r\n      setOriginalRating(value);\r\n    } catch (err) {\r\n      console.error('Error fetching user rating:', err);\r\n      setTempRating(0);\r\n      setOriginalRating(0);\r\n    } finally {\r\n      setRatingLoaded(true);\r\n      setShowRating(false);\r\n    }\r\n  };\r\n\r\n  fetchUserRating();\r\n}, [recipe, user?.email]);\r\n\r\n  const handleRatingChange = (rate) => {\r\n    setTempRating(rate);\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/recipes/${props.recipe._id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userEmail: user?.email,\r\n          rating: tempRating,\r\n        }),\r\n      });\r\n\r\n      if (!response.ok) throw new Error('Failed to save rating');\r\n\r\n      setOriginalRating(tempRating);\r\n      setShowRating(false);\r\n      setSaveMessage('Rating Saved!');\r\n      if (props?.onRatingUpdate) props.onRatingUpdate();\r\n    } catch (error) {\r\n      console.error('Error saving rating:', error);\r\n      setSaveMessage('Failed to save rating.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n\r\n  const rateButtonLabel = ratingLoaded\r\n    ? originalRating > 0\r\n      ? 'Edit Recipe Rating'\r\n      : 'Add Recipe Rating'\r\n    : 'Loading...';\r\n\r\n\r\n  useEffect(() => {\r\n    if (ratingLoaded) {\r\n      console.log(\"=== Rating Debug Info ===\");\r\n      console.log(\"originalRating:\", originalRating);\r\n      console.log(\"tempRating:\", tempRating);\r\n      console.log(\"rateButtonLabel:\", rateButtonLabel);\r\n      console.log(\"Condition:\", originalRating > 0 ? \"Editing existing rating\" : \"Adding new rating\");\r\n      console.log(\"=========================\");\r\n    }\r\n  }, [ratingLoaded, originalRating, tempRating]);\r\n\r\n  if (!props?.recipe) return null;\r\n\r\n  return (\r\n    <div style={{\r\n      position: \"fixed\",\r\n      top: 0,\r\n      left: 0,\r\n      width: \"100vw\",\r\n      height: \"100vh\",\r\n      backgroundColor: \"rgba(0,0,0,0.6)\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      zIndex: 1000,\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: \"#fff\",\r\n        padding: \"20px\",\r\n        borderRadius: \"8px\",\r\n        width: \"90%\",\r\n        maxWidth: \"500px\",\r\n        maxHeight: \"80vh\",\r\n        overflowY: \"auto\",\r\n        position: \"relative\",\r\n      }}>\r\n        <button style={{\r\n          position: \"absolute\",\r\n          top: \"10px\",\r\n          right: \"10px\",\r\n          background: \"red\",\r\n          color: \"white\",\r\n          border: \"none\",\r\n          borderRadius: \"4px\",\r\n          padding: \"5px 10px\",\r\n          cursor: \"pointer\",\r\n        }} onClick={props?.onClose}>X</button>\r\n\r\n        <h2>{props?.recipe.name}</h2>\r\n\r\n        {ratingLoaded && (\r\n          <button\r\n            onClick={() => setShowRating(true)}\r\n            style={{\r\n              marginTop: '10px',\r\n              padding: '8px 16px',\r\n              backgroundColor: '#ed2929ff',\r\n              color: '#fff',\r\n              border: 'none',\r\n              borderRadius: '4px',\r\n              cursor: 'pointer',\r\n            }}>\r\n            {rateButtonLabel}\r\n          </button>\r\n        )}\r\n\r\n        {showRating ? (\r\n          <div style={{ marginTop: '10px' }}>\r\n            <Rating\r\n              onClick={handleRatingChange}\r\n              size={30}\r\n              initialValue={tempRating}\r\n              allowHover\r\n              allowFraction={false}\r\n              transition\r\n              fillColor=\"#FFD700\"\r\n              emptyColor=\"#fff\"\r\n              SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n            />\r\n            <button\r\n              onClick={handleSave}\r\n              style={{\r\n                marginTop: '10px',\r\n                padding: '8px 16px',\r\n                backgroundColor: '#28a745',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: '4px',\r\n                cursor: 'pointer',\r\n              }}>\r\n              {loading ? 'Saving...' : 'Save Rating'}\r\n            </button>\r\n            {saveMessage && (\r\n              <p style={{ color: 'green', marginTop: '8px' }}>{saveMessage}</p>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          ratingLoaded && tempRating > 0 && (\r\n            <div style={{ marginTop: '10px' }}>\r\n              <p><strong>Your Rating:</strong></p>\r\n              <Rating\r\n                readonly\r\n                size={25}\r\n                initialValue={tempRating}\r\n                fillColor=\"#FFD700\"\r\n                emptyColor=\"#fff\"\r\n                SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n              />\r\n            </div>\r\n          )\r\n        )}\r\n\r\n        <p><strong>Cuisine:</strong> {props?.recipe.cuisine}</p>\r\n        <p><strong>Difficulty Level:</strong> {props?.recipe.difficulty}</p>\r\n        <p><strong>Time:</strong> {props?.recipe.time} hour</p>\r\n        <p><strong>Instructions:</strong> {props?.recipe.instructions}</p>\r\n\r\n        <p><strong>Ingredients:</strong></p>\r\n        <ul>\r\n          {props?.recipe.ingredients.map((ingredient, index) => (\r\n            <li key={index}>{ingredient}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetailsModal;\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,MAAM,QAAQ,0BAA0B;AACjD,SAASC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}