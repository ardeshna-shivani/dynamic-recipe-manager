{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\react recipe-project\\\\recipe-manager\\\\src\\\\Pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RecipeCard from '../Components/RecipeCard';\nimport { AuthContext } from '../utils/Auth';\nimport RecipeDetailsModal from '../Components/RecipeDetailsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = props => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = React.useContext(AuthContext);\n  const [recipes, setRecipes] = useState([]);\n  //   const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [showOnlyMyRecipe, setShowOnlyMyRecipe] = useState(false);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  const [allRecipe, setAllRecipe] = useState([]);\n  const visibleRecipe = allRecipe.filter(r => {\n    if (!user) return true; // Show all recipes if not logged in\n    if (showOnlyMyRecipe) return r.userId === user.email; // Only show user's recipes if 'Show My Recipes' is selected\n    return true;\n  });\n  const filteredRecipes = visibleRecipe.filter(recipe => recipe.name.toLowerCase().includes(props === null || props === void 0 ? void 0 : props.searchTerm.toLowerCase())).filter(r => props !== null && props !== void 0 && props.cuisineFilter ? r.cuisine === (props === null || props === void 0 ? void 0 : props.cuisineFilter) : true).filter(r => props !== null && props !== void 0 && props.difficultyFilter ? r.difficulty === (props === null || props === void 0 ? void 0 : props.difficultyFilter) : true).sort((a, b) => {\n    if ((props === null || props === void 0 ? void 0 : props.sortOption) === \"time\") {\n      return Number(a.time || 0) - Number(b.time || 0);\n    }\n    if ((props === null || props === void 0 ? void 0 : props.sortOption) === \"alpha\") {\n      return a.name.localeCompare(b.name);\n    }\n    return 0;\n  });\n  useEffect(() => {\n    // Load recipes from localStorage or API\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\n    setRecipes(savedRecipes);\n    filteredRecipes();\n  }, []);\n  useEffect(() => {\n    // Filter recipes based on the \"Show My Recipes\" toggle\n    if (showOnlyMyRecipe && user) {\n      const myRecipes = recipes.filter(recipe => recipe.userEmail === user.email);\n      setFilteredRecipes(myRecipes);\n    } else {\n      setFilteredRecipes(recipes);\n    }\n  }, [showOnlyMyRecipe, recipes, user]);\n  const handleDelete = recipeId => {\n    // Filter out the deleted recipe by ID\n    const updatedRecipes = recipes.filter(recipe => recipe.id !== recipeId);\n\n    // Update state with the new list\n    setRecipes(updatedRecipes);\n    filteredRecipes(updatedRecipes);\n\n    // Update localStorage with the new list\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOnlyMyRecipe(prev => !prev),\n        children: showOnlyMyRecipe ? 'Show All Recipes' : 'Show My Recipes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/addRecipe') // Navigate to the form to add a new recipe\n        ,\n        children: \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), filteredRecipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recipes found. Try adjusting your filters or add one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: filteredRecipes.map(r => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        recipe: r,\n        onDelete: handleDelete // Pass handleDelete to RecipeCard\n      }, r.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeDetailsModal, {\n      recipe: selectedRecipe,\n      onClose: () => setSelectedRecipe(null) // Close the modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"TsfNBngbu0fNaGOC4r3zSCRzbZA=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nconst gridStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n  gap: '20px'\n};\nexport default HomePage;\n\n//edit recipe flow setup\n//some minnor issue fixed.\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RecipeCard","AuthContext","RecipeDetailsModal","jsxDEV","_jsxDEV","HomePage","props","_s","navigate","user","useContext","recipes","setRecipes","showOnlyMyRecipe","setShowOnlyMyRecipe","selectedRecipe","setSelectedRecipe","allRecipe","setAllRecipe","visibleRecipe","filter","r","userId","email","filteredRecipes","recipe","name","toLowerCase","includes","searchTerm","cuisineFilter","cuisine","difficultyFilter","difficulty","sort","a","b","sortOption","Number","time","localeCompare","savedRecipes","JSON","parse","localStorage","getItem","myRecipes","userEmail","setFilteredRecipes","handleDelete","recipeId","updatedRecipes","id","setItem","stringify","children","style","display","gap","marginBottom","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","length","gridStyle","map","onDelete","onClose","_c","gridTemplateColumns","$RefreshReg$"],"sources":["C:/Users/Shivani/react recipe-project/recipe-manager/src/Pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RecipeCard from '../Components/RecipeCard'; \r\nimport { AuthContext } from '../utils/Auth'; \r\nimport RecipeDetailsModal from '../Components/RecipeDetailsModal';\r\n\r\nconst HomePage = (props) => {\r\n  const navigate = useNavigate();\r\n  const { user } = React.useContext(AuthContext); \r\n  const [recipes, setRecipes] = useState([]);\r\n//   const [filteredRecipes, setFilteredRecipes] = useState([]);\r\n  const [showOnlyMyRecipe, setShowOnlyMyRecipe] = useState(false);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n  const [allRecipe,setAllRecipe] = useState([]);\r\n\r\n  const visibleRecipe = allRecipe.filter((r) => {\r\n    if (!user) return true; // Show all recipes if not logged in\r\n    if (showOnlyMyRecipe) return r.userId === user.email; // Only show user's recipes if 'Show My Recipes' is selected\r\n    return true;\r\n  })\r\n\r\n  const filteredRecipes = visibleRecipe\r\n    .filter((recipe) =>\r\n      recipe.name.toLowerCase().includes(props?.searchTerm.toLowerCase())\r\n    )\r\n    .filter((r) => (props?.cuisineFilter ? r.cuisine === props?.cuisineFilter : true))\r\n    .filter((r) => (props?.difficultyFilter ? r.difficulty === props?.difficultyFilter : true))\r\n    .sort((a, b) => {\r\n      if (props?.sortOption === \"time\") {\r\n        return Number(a.time || 0) - Number(b.time || 0);\r\n      }\r\n      if (props?.sortOption === \"alpha\") {\r\n        return a.name.localeCompare(b.name);\r\n      }\r\n      return 0;\r\n    });\r\n\r\n  useEffect(() => {\r\n    // Load recipes from localStorage or API\r\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\r\n    setRecipes(savedRecipes);\r\n    filteredRecipes(); \r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Filter recipes based on the \"Show My Recipes\" toggle\r\n    if (showOnlyMyRecipe && user) {\r\n      const myRecipes = recipes.filter((recipe) => recipe.userEmail === user.email);\r\n      setFilteredRecipes(myRecipes);\r\n    } else {\r\n      setFilteredRecipes(recipes);\r\n    }\r\n  }, [showOnlyMyRecipe, recipes, user]);\r\n\r\n  const handleDelete = (recipeId) => {\r\n    // Filter out the deleted recipe by ID\r\n    const updatedRecipes = recipes.filter((recipe) => recipe.id !== recipeId);\r\n    \r\n    // Update state with the new list\r\n    setRecipes(updatedRecipes);\r\n    filteredRecipes(updatedRecipes);\r\n\r\n    // Update localStorage with the new list\r\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes));\r\n  };\r\n  \r\n\r\n\r\n  return (\r\n    <div>\r\n      {/* User logged in, show the buttons for adding and filtering recipes */}\r\n      {user && (\r\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\r\n          <button onClick={() => setShowOnlyMyRecipe((prev) => !prev)}>\r\n            {showOnlyMyRecipe ? 'Show All Recipes' : 'Show My Recipes'}\r\n          </button>\r\n          <button\r\n            onClick={() => navigate('/addRecipe')} // Navigate to the form to add a new recipe\r\n          >\r\n            Add Recipe\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* No recipes found message */}\r\n      {filteredRecipes.length === 0 ? (\r\n        <p>No recipes found. Try adjusting your filters or add one!</p>\r\n      ) : (\r\n        <div style={gridStyle}>\r\n          {/* Render recipe cards */}\r\n          {filteredRecipes.map((r) => (\r\n            <RecipeCard\r\n              key={r.id}\r\n              recipe={r}\r\n              onDelete={handleDelete} // Pass handleDelete to RecipeCard\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show Recipe Details Modal */}\r\n      {selectedRecipe && (\r\n        <RecipeDetailsModal\r\n          recipe={selectedRecipe}\r\n          onClose={() => setSelectedRecipe(null)} // Close the modal\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst gridStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\r\n  gap: '20px',\r\n};\r\n\r\nexport default HomePage;\r\n\r\n//edit recipe flow setup\r\n//some minnor issue fixed."],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}