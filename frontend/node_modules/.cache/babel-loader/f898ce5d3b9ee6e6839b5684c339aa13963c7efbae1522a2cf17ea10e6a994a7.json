{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\react recipe-project\\\\recipe-manager\\\\src\\\\Components\\\\RecipeDetailsModal.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react';\n// import { Rating } from 'react-simple-star-rating';\n\n// const RecipeDetailsModal = (props) => {\n//   const [showRating,setShowRating] = useState(false);//star batave\n//   // console.log(\"setShowRating\",showRating);\n\n//   const [tempRating, setTempRating] = useState(0);\n//   // console.log(\"setTempRating\",tempRating);\n//   useEffect(() => {\n//     // const initialRating = props?.recipe?.rating || 0;\n//     // setFinalRating(props?.recipe?.rating || 0);\n//     setTempRating(props?.recipe?.rating || 0);\n//     setShowRating(false);//star mode close\n//   }, [props?.recipe]);//recipe change thay tyare chale\n\n//   if (!props?.recipe) return null;\n\n//   const rateButtonLabel = tempRating > 0 ? \"Edit recipe Rate\" : \"Add recipe Rate\";\n//   //rating hoi to label edit show thase baki add show\n\n//   const modalOverlayStyle = {\n//     position: \"fixed\",\n//     top: 0,\n//     left: 0,\n//     width: \"100vw\",\n//     height: \"100vh\",\n//     backgroundColor: \"rgba(0, 0, 0, 0.6)\",\n//     display: \"flex\",\n//     justifyContent: \"center\",\n//     alignItems: \"center\",\n//     zIndex: 1000,\n//   };\n\n//   const modalContentStyle = {\n//     backgroundColor: \"#fff\",\n//     padding: \"20px\",\n//     borderRadius: \"8px\",\n//     width: \"90%\",\n//     maxWidth: \"500px\",\n//     maxHeight: \"80vh\",\n//     overflowY: \"auto\",\n//     position: \"relative\",\n//   };\n\n//   const closeButtonStyle = {\n//     position: \"absolute\",\n//     top: \"10px\",\n//     right: \"10px\",\n//     background: \"red\",\n//     color: \"white\",\n//     border: \"none\",\n//     borderRadius: \"4px\",\n//     padding: \"5px 10px\",\n//     cursor: \"pointer\",\n//   };\n\n//   // const handleClose = () => {\n//   //   setIsOpen(false);\n//   // };\n\n//   const handleRateButtonClick = () => {\n//       setShowRating(true);\n//       //user add/edit btn click kare tyare rating edit ui mate true\n//   }\n\n//   const handleRatingChange = (rate) => {\n//     setTempRating(rate);\n//     //user rating star click tyare te rating tempRating ma set\n//   };\n\n//   const handleSave = () => {\n//     const recipes = JSON.parse(localStorage.getItem('recipes')) || [];//recipe get [{}]\n//     const updatedRecipes = recipes.map((r) =>\n//       r.id === props?.recipe.id ? { ...r, rating: tempRating } : r\n//     );//r.id === props?.recipe.id - true (recipe obj(...r- r obj ne badhi property copy kare na)\n//     //rating property na nava temp rating value thi update karvi.) \n//     //false to r array ma j hase.\n//     localStorage.setItem('recipes', JSON.stringify(updatedRecipes));//store recipe\n//     // console.log(\"updatedRecipes\",updatedRecipes);[{}]\n//     setTempRating(tempRating);//rating 5,4\n//     //console.log(\"setTempRating\",tempRating);\n//     setShowRating(false);\n//     if (props?.onRatingUpdate) props?.onRatingUpdate();\n//   };\n\n//   return (\n//     <div style={modalOverlayStyle}>\n//       <div style={modalContentStyle}>\n//         <button style={closeButtonStyle} onClick={props?.onClose}>X</button>\n//         <h2>{props.recipe.name}</h2>\n//         <div style={{ marginTop: '10px' }}>\n//           <button\n//             onClick={handleRateButtonClick}\n//               style={{padding: '8px 16px',backgroundColor: '#ed2929ff',color: '#fff',border: 'none',borderRadius: '4px',\n//               cursor: 'pointer',}}>\n//             {rateButtonLabel}\n//           </button>\n//         </div>\n//         {/* Show rating stars */}\n//         {/* editable rating stars and save btn */}\n//         {showRating ? (\n//   <div style={{ marginTop: '10px'}}>\n//     <Rating\n//       onClick={handleRatingChange}\n//       size={30}\n//       initialValue={tempRating}\n//       allowHover\n//       allowFraction={false}\n//       transition\n//       fillColor=\"#FFD700\"\n//       emptyColor=\"#fff\"\n//       SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\n//     />\n\n//     <button\n//       onClick={handleSave}\n//       style={{\n//         marginTop: '10px',\n//         padding: '8px 16px',\n//         backgroundColor: '#28a745',\n//         color: '#fff',\n//         border: 'none',\n//         borderRadius: '4px',\n//         cursor: 'pointer',\n//       }}\n//     >\n//       Save\n//     </button>\n//   </div>\n// ) : (\n//   // tempRating > 0 readOnly rating show\n//   //jyare user aa koi rating choose na karyu hoi tyare \n//   tempRating > 0 && (\n//     <div style={{ marginTop: '10px' }}>\n//       <p><strong>Your Rating:</strong></p>\n//       <Rating\n//         readonly\n//         size={25}\n//         initialValue={tempRating}\n//         fillColor=\"#FFD700\"\n//         emptyColor=\"#fff\"\n//         SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\n//       />\n//     </div>\n//   )\n// )}\n\n//         <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\n//         <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\n//         <p><strong>Time:</strong> {props.recipe.time} hour</p>\n//         <p><strong>Instructions: </strong>{props.recipe.instructions}</p>\n//         {/* Ingredients can be displayed here if needed */}\n//         <p>Ingredients:</p>\n//         <ul>\n//           {props?.recipe.ingredients.map((ingredient, index) => (\n//             <li key={index}>{ingredient}</li>\n//           ))}\n//         </ul>\n//       </div>\n//     </div>\n//   );\n// };\n\nimport React, { useEffect, useState } from 'react';\nimport { Rating } from 'react-simple-star-rating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetailsModal = ({\n  recipe,\n  onClose,\n  onRatingUpdate,\n  userEmail\n}) => {\n  _s();\n  const [showRating, setShowRating] = useState(false);\n  const [tempRating, setTempRating] = useState(0);\n  useEffect(() => {\n    var _recipe$ratings;\n    if (!recipe) return;\n\n    // Find current user's rating from ratings array\n    const userRatingObj = (_recipe$ratings = recipe.ratings) === null || _recipe$ratings === void 0 ? void 0 : _recipe$ratings.find(r => r.userEmail === userEmail);\n    setTempRating(userRatingObj ? userRatingObj.rating : 0);\n    setShowRating(false);\n  }, [recipe, userEmail]);\n  if (!recipe) return null;\n  const rateButtonLabel = tempRating > 0 ? \"Edit recipe Rate\" : \"Add recipe Rate\";\n  const handleRateButtonClick = () => {\n    setShowRating(true);\n  };\n  const handleRatingChange = rate => {\n    setTempRating(rate);\n  };\n  const handleSave = () => {\n    // Load recipes from localStorage\n    const recipes = JSON.parse(localStorage.getItem('recipes')) || [];\n    const updatedRecipes = recipes.map(r => {\n      if (r.id === recipe.id) {\n        // Copy ratings or empty array\n        const ratingsArr = Array.isArray(r.ratings) ? [...r.ratings] : [];\n\n        // Check if user has rated before\n        const index = ratingsArr.findIndex(rt => rt.userEmail === userEmail);\n        if (index >= 0) {\n          // Update existing rating\n          ratingsArr[index].rating = tempRating;\n        } else {\n          // Add new rating\n          ratingsArr.push({\n            userEmail,\n            rating: tempRating\n          });\n        }\n        return {\n          ...r,\n          ratings: ratingsArr\n        };\n      }\n      return r;\n    });\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes));\n    setShowRating(false);\n    if (onRatingUpdate) onRatingUpdate();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      width: '100vw',\n      height: '100vh',\n      backgroundColor: 'rgba(0,0,0,0.6)',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: 1000\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#fff',\n        padding: 20,\n        borderRadius: 8,\n        width: '90%',\n        maxWidth: 500,\n        maxHeight: '80vh',\n        overflowY: 'auto',\n        position: 'relative'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          position: 'absolute',\n          top: 10,\n          right: 10,\n          background: 'red',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 4,\n          padding: '5px 10px',\n          cursor: 'pointer'\n        },\n        onClick: onClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: recipe.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRateButtonClick,\n        style: {\n          padding: '8px 16px',\n          backgroundColor: '#ed2929ff',\n          color: '#fff',\n          border: 'none',\n          borderRadius: 4,\n          cursor: 'pointer',\n          marginTop: 10\n        },\n        children: rateButtonLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), showRating ? /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(Rating, {\n          onClick: handleRatingChange,\n          size: 30,\n          initialValue: tempRating,\n          allowHover: true,\n          allowFraction: false,\n          transition: true,\n          fillColor: \"#FFD700\",\n          emptyColor: \"#fff\",\n          SVGstyle: {\n            stroke: 'black',\n            strokeWidth: 2,\n            margin: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSave,\n          style: {\n            marginTop: 10,\n            padding: '8px 16px',\n            backgroundColor: '#28a745',\n            color: '#fff',\n            border: 'none',\n            borderRadius: 4,\n            cursor: 'pointer'\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this) : tempRating > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Your Rating:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rating, {\n          readonly: true,\n          size: 25,\n          initialValue: tempRating,\n          fillColor: \"#FFD700\",\n          emptyColor: \"#fff\",\n          SVGstyle: {\n            stroke: 'black',\n            strokeWidth: 2,\n            margin: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Cuisine:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 12\n        }, this), \" \", recipe.cuisine]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Difficulty Level:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 12\n        }, this), \" \", recipe.difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Time:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 12\n        }, this), \" \", recipe.time, \" hour\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Instructions: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 12\n        }, this), recipe.instructions]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Ingredients:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: ingredient\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(RecipeDetailsModal, \"USZMhpiSvK0o9BFPMEK9A5YEtGM=\");\n_c = RecipeDetailsModal;\nexport default RecipeDetailsModal;\n\n// export default RecipeDetailsModal;\n//save rating localstorage and recipeDetailsModal\n//user login and first time add recipe show add recipe rate than second time edit recipe rate btn and edit\nvar _c;\n$RefreshReg$(_c, \"RecipeDetailsModal\");","map":{"version":3,"names":["React","useEffect","useState","Rating","jsxDEV","_jsxDEV","RecipeDetailsModal","recipe","onClose","onRatingUpdate","userEmail","_s","showRating","setShowRating","tempRating","setTempRating","_recipe$ratings","userRatingObj","ratings","find","r","rating","rateButtonLabel","handleRateButtonClick","handleRatingChange","rate","handleSave","recipes","JSON","parse","localStorage","getItem","updatedRecipes","map","id","ratingsArr","Array","isArray","index","findIndex","rt","push","setItem","stringify","style","position","top","left","width","height","backgroundColor","display","justifyContent","alignItems","zIndex","children","padding","borderRadius","maxWidth","maxHeight","overflowY","right","background","color","border","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","name","marginTop","size","initialValue","allowHover","allowFraction","transition","fillColor","emptyColor","SVGstyle","stroke","strokeWidth","margin","readonly","cuisine","difficulty","time","instructions","ingredients","ingredient","_c","$RefreshReg$"],"sources":["C:/Users/Shivani/react recipe-project/recipe-manager/src/Components/RecipeDetailsModal.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { Rating } from 'react-simple-star-rating';\r\n\r\n// const RecipeDetailsModal = (props) => {\r\n//   const [showRating,setShowRating] = useState(false);//star batave\r\n//   // console.log(\"setShowRating\",showRating);\r\n  \r\n//   const [tempRating, setTempRating] = useState(0);\r\n//   // console.log(\"setTempRating\",tempRating);\r\n//   useEffect(() => {\r\n//     // const initialRating = props?.recipe?.rating || 0;\r\n//     // setFinalRating(props?.recipe?.rating || 0);\r\n//     setTempRating(props?.recipe?.rating || 0);\r\n//     setShowRating(false);//star mode close\r\n//   }, [props?.recipe]);//recipe change thay tyare chale\r\n\r\n//   if (!props?.recipe) return null;\r\n\r\n//   const rateButtonLabel = tempRating > 0 ? \"Edit recipe Rate\" : \"Add recipe Rate\";\r\n//   //rating hoi to label edit show thase baki add show\r\n\r\n//   const modalOverlayStyle = {\r\n//     position: \"fixed\",\r\n//     top: 0,\r\n//     left: 0,\r\n//     width: \"100vw\",\r\n//     height: \"100vh\",\r\n//     backgroundColor: \"rgba(0, 0, 0, 0.6)\",\r\n//     display: \"flex\",\r\n//     justifyContent: \"center\",\r\n//     alignItems: \"center\",\r\n//     zIndex: 1000,\r\n//   };\r\n\r\n//   const modalContentStyle = {\r\n//     backgroundColor: \"#fff\",\r\n//     padding: \"20px\",\r\n//     borderRadius: \"8px\",\r\n//     width: \"90%\",\r\n//     maxWidth: \"500px\",\r\n//     maxHeight: \"80vh\",\r\n//     overflowY: \"auto\",\r\n//     position: \"relative\",\r\n//   };\r\n\r\n//   const closeButtonStyle = {\r\n//     position: \"absolute\",\r\n//     top: \"10px\",\r\n//     right: \"10px\",\r\n//     background: \"red\",\r\n//     color: \"white\",\r\n//     border: \"none\",\r\n//     borderRadius: \"4px\",\r\n//     padding: \"5px 10px\",\r\n//     cursor: \"pointer\",\r\n//   };\r\n\r\n//   // const handleClose = () => {\r\n//   //   setIsOpen(false);\r\n//   // };\r\n\r\n//   const handleRateButtonClick = () => {\r\n//       setShowRating(true);\r\n//       //user add/edit btn click kare tyare rating edit ui mate true\r\n//   }\r\n\r\n//   const handleRatingChange = (rate) => {\r\n//     setTempRating(rate);\r\n//     //user rating star click tyare te rating tempRating ma set\r\n//   };\r\n\r\n//   const handleSave = () => {\r\n//     const recipes = JSON.parse(localStorage.getItem('recipes')) || [];//recipe get [{}]\r\n//     const updatedRecipes = recipes.map((r) =>\r\n//       r.id === props?.recipe.id ? { ...r, rating: tempRating } : r\r\n//     );//r.id === props?.recipe.id - true (recipe obj(...r- r obj ne badhi property copy kare na)\r\n//     //rating property na nava temp rating value thi update karvi.) \r\n//     //false to r array ma j hase.\r\n//     localStorage.setItem('recipes', JSON.stringify(updatedRecipes));//store recipe\r\n//     // console.log(\"updatedRecipes\",updatedRecipes);[{}]\r\n//     setTempRating(tempRating);//rating 5,4\r\n//     //console.log(\"setTempRating\",tempRating);\r\n//     setShowRating(false);\r\n//     if (props?.onRatingUpdate) props?.onRatingUpdate();\r\n//   };\r\n\r\n//   return (\r\n//     <div style={modalOverlayStyle}>\r\n//       <div style={modalContentStyle}>\r\n//         <button style={closeButtonStyle} onClick={props?.onClose}>X</button>\r\n//         <h2>{props.recipe.name}</h2>\r\n//         <div style={{ marginTop: '10px' }}>\r\n//           <button\r\n//             onClick={handleRateButtonClick}\r\n//               style={{padding: '8px 16px',backgroundColor: '#ed2929ff',color: '#fff',border: 'none',borderRadius: '4px',\r\n//               cursor: 'pointer',}}>\r\n//             {rateButtonLabel}\r\n//           </button>\r\n//         </div>\r\n//         {/* Show rating stars */}\r\n//         {/* editable rating stars and save btn */}\r\n//         {showRating ? (\r\n//   <div style={{ marginTop: '10px'}}>\r\n//     <Rating\r\n//       onClick={handleRatingChange}\r\n//       size={30}\r\n//       initialValue={tempRating}\r\n//       allowHover\r\n//       allowFraction={false}\r\n//       transition\r\n//       fillColor=\"#FFD700\"\r\n//       emptyColor=\"#fff\"\r\n//       SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n//     />\r\n\r\n//     <button\r\n//       onClick={handleSave}\r\n//       style={{\r\n//         marginTop: '10px',\r\n//         padding: '8px 16px',\r\n//         backgroundColor: '#28a745',\r\n//         color: '#fff',\r\n//         border: 'none',\r\n//         borderRadius: '4px',\r\n//         cursor: 'pointer',\r\n//       }}\r\n//     >\r\n//       Save\r\n//     </button>\r\n//   </div>\r\n// ) : (\r\n//   // tempRating > 0 readOnly rating show\r\n//   //jyare user aa koi rating choose na karyu hoi tyare \r\n//   tempRating > 0 && (\r\n//     <div style={{ marginTop: '10px' }}>\r\n//       <p><strong>Your Rating:</strong></p>\r\n//       <Rating\r\n//         readonly\r\n//         size={25}\r\n//         initialValue={tempRating}\r\n//         fillColor=\"#FFD700\"\r\n//         emptyColor=\"#fff\"\r\n//         SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n//       />\r\n//     </div>\r\n//   )\r\n// )}\r\n        \r\n//         <p><strong>Cuisine:</strong> {props.recipe.cuisine}</p>\r\n//         <p><strong>Difficulty Level:</strong> {props.recipe.difficulty}</p>\r\n//         <p><strong>Time:</strong> {props.recipe.time} hour</p>\r\n//         <p><strong>Instructions: </strong>{props.recipe.instructions}</p>\r\n//         {/* Ingredients can be displayed here if needed */}\r\n//         <p>Ingredients:</p>\r\n//         <ul>\r\n//           {props?.recipe.ingredients.map((ingredient, index) => (\r\n//             <li key={index}>{ingredient}</li>\r\n//           ))}\r\n//         </ul>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Rating } from 'react-simple-star-rating';\r\n\r\nconst RecipeDetailsModal = ({ recipe, onClose, onRatingUpdate, userEmail }) => {\r\n  const [showRating, setShowRating] = useState(false);\r\n  const [tempRating, setTempRating] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (!recipe) return;\r\n\r\n    // Find current user's rating from ratings array\r\n    const userRatingObj = recipe.ratings?.find(r => r.userEmail === userEmail);\r\n    setTempRating(userRatingObj ? userRatingObj.rating : 0);\r\n    setShowRating(false);\r\n  }, [recipe, userEmail]);\r\n\r\n  if (!recipe) return null;\r\n\r\n  const rateButtonLabel = tempRating > 0 ? \"Edit recipe Rate\" : \"Add recipe Rate\";\r\n\r\n  const handleRateButtonClick = () => {\r\n    setShowRating(true);\r\n  };\r\n\r\n  const handleRatingChange = (rate) => {\r\n    setTempRating(rate);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    // Load recipes from localStorage\r\n    const recipes = JSON.parse(localStorage.getItem('recipes')) || [];\r\n\r\n    const updatedRecipes = recipes.map(r => {\r\n      if (r.id === recipe.id) {\r\n        // Copy ratings or empty array\r\n        const ratingsArr = Array.isArray(r.ratings) ? [...r.ratings] : [];\r\n\r\n        // Check if user has rated before\r\n        const index = ratingsArr.findIndex(rt => rt.userEmail === userEmail);\r\n\r\n        if (index >= 0) {\r\n          // Update existing rating\r\n          ratingsArr[index].rating = tempRating;\r\n        } else {\r\n          // Add new rating\r\n          ratingsArr.push({ userEmail, rating: tempRating });\r\n        }\r\n\r\n        return { ...r, ratings: ratingsArr };\r\n      }\r\n      return r;\r\n    });\r\n\r\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes));\r\n    setShowRating(false);\r\n\r\n    if (onRatingUpdate) onRatingUpdate();\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      position: 'fixed', top: 0, left: 0,\r\n      width: '100vw', height: '100vh',\r\n      backgroundColor: 'rgba(0,0,0,0.6)',\r\n      display: 'flex', justifyContent: 'center', alignItems: 'center',\r\n      zIndex: 1000\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: '#fff',\r\n        padding: 20,\r\n        borderRadius: 8,\r\n        width: '90%',\r\n        maxWidth: 500,\r\n        maxHeight: '80vh',\r\n        overflowY: 'auto',\r\n        position: 'relative'\r\n      }}>\r\n        <button\r\n          style={{\r\n            position: 'absolute', top: 10, right: 10,\r\n            background: 'red', color: '#fff',\r\n            border: 'none', borderRadius: 4,\r\n            padding: '5px 10px', cursor: 'pointer'\r\n          }}\r\n          onClick={onClose}>X</button>\r\n\r\n        <h2>{recipe.name}</h2>\r\n\r\n        <button\r\n          onClick={handleRateButtonClick}\r\n          style={{\r\n            padding: '8px 16px',\r\n            backgroundColor: '#ed2929ff',\r\n            color: '#fff',\r\n            border: 'none',\r\n            borderRadius: 4,\r\n            cursor: 'pointer',\r\n            marginTop: 10\r\n          }}\r\n        >\r\n          {rateButtonLabel}\r\n        </button>\r\n\r\n        {showRating ? (\r\n          <div style={{ marginTop: 10 }}>\r\n            <Rating\r\n              onClick={handleRatingChange}\r\n              size={30}\r\n              initialValue={tempRating}\r\n              allowHover\r\n              allowFraction={false}\r\n              transition\r\n              fillColor=\"#FFD700\"\r\n              emptyColor=\"#fff\"\r\n              SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n            />\r\n            <button\r\n              onClick={handleSave}\r\n              style={{\r\n                marginTop: 10,\r\n                padding: '8px 16px',\r\n                backgroundColor: '#28a745',\r\n                color: '#fff',\r\n                border: 'none',\r\n                borderRadius: 4,\r\n                cursor: 'pointer',\r\n              }}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          tempRating > 0 && (\r\n            <div style={{ marginTop: 10 }}>\r\n              <p><strong>Your Rating:</strong></p>\r\n              <Rating\r\n                readonly\r\n                size={25}\r\n                initialValue={tempRating}\r\n                fillColor=\"#FFD700\"\r\n                emptyColor=\"#fff\"\r\n                SVGstyle={{ stroke: 'black', strokeWidth: 2, margin: 2 }}\r\n              />\r\n            </div>\r\n          )\r\n        )}\r\n\r\n        <p><strong>Cuisine:</strong> {recipe.cuisine}</p>\r\n        <p><strong>Difficulty Level:</strong> {recipe.difficulty}</p>\r\n        <p><strong>Time:</strong> {recipe.time} hour</p>\r\n        <p><strong>Instructions: </strong>{recipe.instructions}</p>\r\n\r\n        <p>Ingredients:</p>\r\n        <ul>\r\n          {recipe.ingredients.map((ingredient, index) => (\r\n            <li key={index}>{ingredient}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeDetailsModal;\r\n\r\n// export default RecipeDetailsModal;\r\n//save rating localstorage and recipeDetailsModal\r\n//user login and first time add recipe show add recipe rate than second time edit recipe rate btn and edit"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC,MAAM;EAAEC,OAAO;EAAEC,cAAc;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC7E,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAE/CD,SAAS,CAAC,MAAM;IAAA,IAAAe,eAAA;IACd,IAAI,CAACT,MAAM,EAAE;;IAEb;IACA,MAAMU,aAAa,IAAAD,eAAA,GAAGT,MAAM,CAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}