{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivani\\\\react recipe-project\\\\recipe-manager\\\\src\\\\Pages\\\\HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport RecipeCard from '../Components/RecipeCard';\nimport { AuthContext } from '../utils/Auth';\nimport RecipeDetailsModal from '../Components/RecipeDetailsModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = props => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    user\n  } = React.useContext(AuthContext);\n  const [recipes, setRecipes] = useState([]);\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\n  const [showOnlyMyRecipe, setShowOnlyMyRecipe] = useState(false);\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\n  useEffect(() => {\n    // Load recipes from localStorage or API\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\n    setRecipes(savedRecipes);\n  }, []);\n  useEffect(() => {\n    console.log('Props in HomePage:');\n    console.log('searchTerm:', props.searchTerm);\n    console.log('cuisineFilter:', props.cuisineFilter);\n    console.log('difficultyFilter:', props.difficultyFilter);\n    console.log('sortOption:', props.sortOption);\n    let visibleRecipes = recipes;\n\n    // Filter based on the \"Show My Recipes\" toggle\n    if (showOnlyMyRecipe && user) {\n      visibleRecipes = visibleRecipes.filter(recipe => recipe.userEmail === user.email);\n    }\n\n    // Filter by search term\n    if (props !== null && props !== void 0 && props.searchTerm) {\n      visibleRecipes = visibleRecipes.filter(recipe => recipe.name.toLowerCase().includes(props === null || props === void 0 ? void 0 : props.searchTerm.toLowerCase()));\n    }\n\n    // Filter by cuisine\n    if (props !== null && props !== void 0 && props.cuisineFilter) {\n      visibleRecipes = visibleRecipes.filter(recipe => recipe.cuisine === (props === null || props === void 0 ? void 0 : props.cuisineFilter));\n    }\n\n    // Filter by difficulty\n    if (props !== null && props !== void 0 && props.difficultyFilter) {\n      visibleRecipes = visibleRecipes.filter(recipe => recipe.difficulty === (props === null || props === void 0 ? void 0 : props.difficultyFilter));\n    }\n\n    // Sorting logic\n    if ((props === null || props === void 0 ? void 0 : props.sortOption) === 'time') {\n      visibleRecipes = visibleRecipes.sort((a, b) => {\n        return Number(a.time || 0) - Number(b.time || 0);\n      });\n    } else if ((props === null || props === void 0 ? void 0 : props.sortOption) === 'alpha') {\n      visibleRecipes = visibleRecipes.sort((a, b) => a.name.localeCompare(b.name));\n    }\n    console.log(\"Filtered Recipes:\", visibleRecipes);\n    // Update the filteredRecipes state\n    setFilteredRecipes(visibleRecipes);\n  }, [recipes, showOnlyMyRecipe, props]);\n  const handleDelete = recipeId => {\n    const updatedRecipes = recipes.filter(recipe => recipe.id !== recipeId);\n    setRecipes(updatedRecipes); // Update the recipes state\n    setFilteredRecipes(updatedRecipes); // Update the filteredRecipes state with the new list\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes)); // Store the updated list in localStorage\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [user && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '10px',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowOnlyMyRecipe(prev => !prev),\n        children: showOnlyMyRecipe ? 'Show All Recipes' : 'Show My Recipes'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/addRecipe'),\n        children: \"Add Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), filteredRecipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No recipes found. Try adjusting your filters or add one!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridStyle,\n      children: filteredRecipes.map((r, index) => /*#__PURE__*/_jsxDEV(RecipeCard, {\n        // Use `r.id` if available, otherwise fallback to `index`\n        recipe: r,\n        onDelete: handleDelete // Pass handleDelete to RecipeCard\n      }, r.id || index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), selectedRecipe && /*#__PURE__*/_jsxDEV(RecipeDetailsModal, {\n      recipe: selectedRecipe,\n      onClose: () => setSelectedRecipe(null) // Close the modal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"IEwYnE8AtuKYNt8ub9xaAlBKRkU=\", false, function () {\n  return [useNavigate];\n});\n_c = HomePage;\nconst gridStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\n  gap: '20px'\n};\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","RecipeCard","AuthContext","RecipeDetailsModal","jsxDEV","_jsxDEV","HomePage","props","_s","navigate","user","useContext","recipes","setRecipes","filteredRecipes","setFilteredRecipes","showOnlyMyRecipe","setShowOnlyMyRecipe","selectedRecipe","setSelectedRecipe","savedRecipes","JSON","parse","localStorage","getItem","console","log","searchTerm","cuisineFilter","difficultyFilter","sortOption","visibleRecipes","filter","recipe","userEmail","email","name","toLowerCase","includes","cuisine","difficulty","sort","a","b","Number","time","localeCompare","handleDelete","recipeId","updatedRecipes","id","setItem","stringify","children","style","display","gap","marginBottom","onClick","prev","fileName","_jsxFileName","lineNumber","columnNumber","length","gridStyle","map","r","index","onDelete","onClose","_c","gridTemplateColumns","$RefreshReg$"],"sources":["C:/Users/Shivani/react recipe-project/recipe-manager/src/Pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport RecipeCard from '../Components/RecipeCard';\r\nimport { AuthContext } from '../utils/Auth';\r\nimport RecipeDetailsModal from '../Components/RecipeDetailsModal';\r\n\r\nconst HomePage = (props) => {\r\n  const navigate = useNavigate();\r\n  const { user } = React.useContext(AuthContext);\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [filteredRecipes, setFilteredRecipes] = useState([]);\r\n  const [showOnlyMyRecipe, setShowOnlyMyRecipe] = useState(false);\r\n  const [selectedRecipe, setSelectedRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Load recipes from localStorage or API\r\n    const savedRecipes = JSON.parse(localStorage.getItem('recipes')) || [];\r\n    setRecipes(savedRecipes);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    console.log('Props in HomePage:');\r\n  console.log('searchTerm:', props.searchTerm);\r\n  console.log('cuisineFilter:', props.cuisineFilter);\r\n  console.log('difficultyFilter:', props.difficultyFilter);\r\n  console.log('sortOption:', props.sortOption);\r\n    let visibleRecipes = recipes;\r\n\r\n    // Filter based on the \"Show My Recipes\" toggle\r\n    if (showOnlyMyRecipe && user) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) => recipe.userEmail === user.email);\r\n    }\r\n\r\n    // Filter by search term\r\n    if (props?.searchTerm) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) =>\r\n        recipe.name.toLowerCase().includes(props?.searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Filter by cuisine\r\n    if (props?.cuisineFilter) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) => recipe.cuisine === props?.cuisineFilter);\r\n    }\r\n\r\n    // Filter by difficulty\r\n    if (props?.difficultyFilter) {\r\n      visibleRecipes = visibleRecipes.filter((recipe) => recipe.difficulty === props?.difficultyFilter);\r\n    }\r\n\r\n    // Sorting logic\r\n    if (props?.sortOption === 'time') {\r\n      visibleRecipes = visibleRecipes.sort((a, b) => {\r\n        return Number(a.time || 0) - Number(b.time || 0);\r\n      });\r\n    } else if (props?.sortOption === 'alpha') {\r\n      visibleRecipes = visibleRecipes.sort((a, b) => a.name.localeCompare(b.name));\r\n    }\r\n\r\n    console.log(\"Filtered Recipes:\", visibleRecipes);\r\n    // Update the filteredRecipes state\r\n    setFilteredRecipes(visibleRecipes);\r\n  }, [recipes, showOnlyMyRecipe, props]);\r\n\r\n  const handleDelete = (recipeId) => {\r\n    const updatedRecipes = recipes.filter((recipe) => recipe.id !== recipeId);\r\n    setRecipes(updatedRecipes); // Update the recipes state\r\n    setFilteredRecipes(updatedRecipes); // Update the filteredRecipes state with the new list\r\n    localStorage.setItem('recipes', JSON.stringify(updatedRecipes)); // Store the updated list in localStorage\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* User logged in, show the buttons for adding and filtering recipes */}\r\n      {user && (\r\n        <div style={{ display: 'flex', gap: '10px', marginBottom: '10px' }}>\r\n          <button onClick={() => setShowOnlyMyRecipe((prev) => !prev)}>\r\n            {showOnlyMyRecipe ? 'Show All Recipes' : 'Show My Recipes'}\r\n          </button>\r\n          <button onClick={() => navigate('/addRecipe')}>Add Recipe</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* No recipes found message */}\r\n      {filteredRecipes.length === 0 ? (\r\n        <p>No recipes found. Try adjusting your filters or add one!</p>\r\n      ) : (\r\n        <div style={gridStyle}>\r\n          {/* Render recipe cards */}\r\n          {filteredRecipes.map((r, index) => (\r\n            <RecipeCard\r\n              key={r.id || index} // Use `r.id` if available, otherwise fallback to `index`\r\n              recipe={r}\r\n              onDelete={handleDelete} // Pass handleDelete to RecipeCard\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Show Recipe Details Modal */}\r\n      {selectedRecipe && (\r\n        <RecipeDetailsModal\r\n          recipe={selectedRecipe}\r\n          onClose={() => setSelectedRecipe(null)} // Close the modal\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst gridStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(auto-fill, minmax(250px, 1fr))',\r\n  gap: '20px',\r\n};\r\n\r\nexport default HomePage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}